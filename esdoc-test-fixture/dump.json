[
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/MyClass.js",
    "memberof": null,
    "longname": "src/MyClass.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MyClass1",
    "memberof": "src/MyClass.js",
    "longname": "src/MyClass.js~MyClass1",
    "access": null,
    "export": true,
    "importPath": "esdoc-test-fixture",
    "importStyle": "MyClass1",
    "description": "this is MyClass1 desc.\nthis is second line.\n\nthis is third line.\n\n- item1\n- item2\n- item3\n\n```js\nlet foo = 'this is code block'\n```\n\n| Left align | Right align | Center align |\n|:-----------|------------:|:------------:|\n| This       |        This |     This     |\n| column     |      column |    column    |",
    "examples": [
      "let foo = 10;\nlet bar = 20;",
      "for (let v of values) {\n  let foo = v;\n}"
    ],
    "see": [
      "http://example.com",
      "{@link MyClass2}",
      "{@link SuperMyClass1#superMethod}"
    ],
    "lineNumber": 42,
    "deprecated": "use MyClass1Ex instead of this class.",
    "experimental": "this class is dangerous.",
    "since": "1.2.3",
    "version": "0.0.1",
    "todo": [
      "this is todo1",
      "this is todo2"
    ],
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n",
    "interface": false,
    "extends": [
      "src/OtherClass/SuperMyClass.js~SuperMyClass1"
    ],
    "implements": [
      "MyInterface1",
      "XMLHttpRequest"
    ]
  },
  {
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "staticValue",
    "memberof": "src/MyClass.js~MyClass1",
    "longname": "src/MyClass.js~MyClass1.staticValue",
    "access": null,
    "description": "this is staticValue(get) desc.",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n"
  },
  {
    "kind": "set",
    "static": true,
    "variation": null,
    "name": "staticValue",
    "memberof": "src/MyClass.js~MyClass1",
    "longname": "src/MyClass.js~MyClass1.staticValue",
    "access": null,
    "description": "this is staticValue(set) desc.",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n"
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "staticMethod1",
    "memberof": "src/MyClass.js~MyClass1",
    "longname": "src/MyClass.js~MyClass1.staticMethod1",
    "access": null,
    "description": "this is staticMethod1 desc.",
    "lineNumber": 60,
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n"
  },
  {
    "kind": "member",
    "static": true,
    "variation": null,
    "name": "p1",
    "memberof": "src/MyClass.js~MyClass1",
    "longname": "src/MyClass.js~MyClass1.p1",
    "access": null,
    "description": "this is static p1 desc.",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n"
  },
  {
    "kind": "member",
    "static": true,
    "variation": null,
    "name": "p2",
    "memberof": "src/MyClass.js~MyClass1",
    "longname": "src/MyClass.js~MyClass1.p2",
    "access": "protected",
    "description": "this is static p2 desc.",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n"
  },
  {
    "kind": "member",
    "static": true,
    "variation": null,
    "name": "p3",
    "memberof": "src/MyClass.js~MyClass1",
    "longname": "src/MyClass.js~MyClass1.p3",
    "access": "private",
    "description": "this is static p3 desc.",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n"
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "staticMethod2",
    "memberof": "src/MyClass.js~MyClass1",
    "longname": "src/MyClass.js~MyClass1.staticMethod2",
    "access": "protected",
    "description": "this is staticMethod2 desc.",
    "lineNumber": 86,
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n"
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "staticMethod3",
    "memberof": "src/MyClass.js~MyClass1",
    "longname": "src/MyClass.js~MyClass1.staticMethod3",
    "access": "private",
    "description": "this is staticMethod3 desc.",
    "lineNumber": 93,
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n"
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/MyClass.js~MyClass1",
    "longname": "src/MyClass.js~MyClass1#constructor",
    "access": null,
    "description": "this is constructor desc.",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "p1",
        "description": "this is p1 desc."
      }
    ],
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n"
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "p1",
    "memberof": "src/MyClass.js~MyClass1",
    "longname": "src/MyClass.js~MyClass1#p1",
    "access": null,
    "description": "this is p1 desc.",
    "lineNumber": 107,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n"
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "p2",
    "memberof": "src/MyClass.js~MyClass1",
    "longname": "src/MyClass.js~MyClass1#p2",
    "access": "protected",
    "description": "this is p2 desc.",
    "lineNumber": 114,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n"
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "p3",
    "memberof": "src/MyClass.js~MyClass1",
    "longname": "src/MyClass.js~MyClass1#p3",
    "access": "private",
    "description": "this is p3 desc.",
    "lineNumber": 121,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n"
  },
  {
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "value",
    "memberof": "src/MyClass.js~MyClass1",
    "longname": "src/MyClass.js~MyClass1#value",
    "access": null,
    "description": "this is value(get) desc.",
    "lineNumber": 128,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n"
  },
  {
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "value",
    "memberof": "src/MyClass.js~MyClass1",
    "longname": "src/MyClass.js~MyClass1#value",
    "access": null,
    "description": "this is value(set) desc.",
    "lineNumber": 135,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n"
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "method1",
    "memberof": "src/MyClass.js~MyClass1",
    "longname": "src/MyClass.js~MyClass1#method1",
    "access": null,
    "description": "this is method1 desc.",
    "see": [
      "http://example.com"
    ],
    "lineNumber": 174,
    "deprecated": true,
    "experimental": true,
    "since": "1.2.3",
    "version": "0.0.1",
    "todo": [
      "this is todo1"
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "p1",
        "description": "this is p1(simple) desc."
      },
      {
        "nullable": false,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "p2",
        "description": "this is p2(not nullable) desc."
      },
      {
        "nullable": true,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "p3",
        "description": "this is p3(nullable) desc."
      },
      {
        "nullable": null,
        "types": [
          "number",
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "p4",
        "description": "this is p4(union) desc."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "p5",
        "description": "this is p5(optional) desc."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "123",
        "defaultRaw": 123,
        "name": "p6",
        "description": "this is p6(default) desc."
      },
      {
        "nullable": null,
        "types": [
          "{a: number, b: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "p7",
        "description": "this is p7(object) desc."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "p8",
        "description": "this is p8(nest) desc."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "p8.a",
        "description": "this is p8.a(nest) desc."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "p8.b",
        "description": "this is p8.b(nest) desc."
      },
      {
        "nullable": false,
        "types": [
          "MyClass2",
          "MyClass3[]",
          "{a: number, b: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "p9",
        "description": "this is p9(complex) desc.\nthis is second line."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "p1",
        "description": "this is p1 of return desc."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "p2",
        "description": "this is p2 of return desc."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "this is return desc."
    },
    "abstract": true,
    "override": true,
    "throws": [
      {
        "types": [
          "MyError1"
        ],
        "description": "this is throws MyError1 desc."
      },
      {
        "types": [
          "MyError2"
        ],
        "description": "this is throws MyError2 desc."
      }
    ],
    "emits": [
      {
        "types": [
          "MyEvent1"
        ],
        "description": "this is emits MyEvent1 desc."
      },
      {
        "types": [
          "MyEvent2"
        ],
        "description": "this is emits MyEvent2 desc."
      }
    ],
    "listens": [
      {
        "types": [
          "MyEvent1"
        ],
        "description": "this is listens MyEvent1 desc."
      },
      {
        "types": [
          "MyEvent2"
        ],
        "description": "this is listens MyEvent2 desc."
      }
    ],
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n"
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "method2",
    "memberof": "src/MyClass.js~MyClass1",
    "longname": "src/MyClass.js~MyClass1#method2",
    "access": "protected",
    "description": "this is method2 desc.",
    "lineNumber": 181,
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n"
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "method3",
    "memberof": "src/MyClass.js~MyClass1",
    "longname": "src/MyClass.js~MyClass1#method3",
    "access": "private",
    "description": "this is method3 desc.",
    "lineNumber": 187,
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MyClass2",
    "memberof": "src/MyClass.js",
    "longname": "src/MyClass.js~MyClass2",
    "access": null,
    "export": true,
    "importPath": "esdoc-test-fixture",
    "importStyle": "{MyClass2}",
    "description": "this is MyClass2 desc.",
    "lineNumber": 193,
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n",
    "interface": false,
    "extends": [
      "MyClass1"
    ]
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MyClass3",
    "memberof": "src/MyClass.js",
    "longname": "src/MyClass.js~MyClass3",
    "access": null,
    "export": false,
    "importPath": "esdoc-test-fixture",
    "importStyle": null,
    "description": "this is MyClass3 desc.",
    "lineNumber": 199,
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n",
    "interface": false,
    "extends": [
      "MyClass2"
    ]
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MyClass4",
    "memberof": "src/MyClass.js",
    "longname": "src/MyClass.js~MyClass4",
    "access": null,
    "export": false,
    "importPath": "esdoc-test-fixture",
    "importStyle": null,
    "description": "this is MyClass4 desc.",
    "lineNumber": 206,
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n",
    "interface": true
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MyClass5",
    "memberof": "src/MyClass.js",
    "longname": "src/MyClass.js~MyClass5",
    "access": null,
    "export": false,
    "importPath": "esdoc-test-fixture",
    "importStyle": null,
    "description": "this is MyClass5 desc.",
    "lineNumber": 213,
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n",
    "interface": false,
    "implements": [
      "MyClass1"
    ]
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MyClass6",
    "memberof": "src/MyClass.js",
    "longname": "src/MyClass.js~MyClass6",
    "access": null,
    "export": false,
    "importPath": "esdoc-test-fixture",
    "importStyle": null,
    "description": "this is MyClass6 desc.",
    "lineNumber": 219,
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n",
    "interface": false,
    "extends": [
      "MyClass5"
    ]
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MyClass999",
    "memberof": "src/MyClass.js",
    "longname": "src/MyClass.js~MyClass999",
    "access": null,
    "export": true,
    "importPath": "esdoc-test-fixture",
    "importStyle": "{MyClass999}",
    "description": "this is MyClass999 desc.",
    "lineNumber": 226,
    "ignore": true,
    "content": "import SuperMyClass1 from './OtherClass/SuperMyClass.js';\n\n/**\n * this is MyClass1 desc.\n * this is second line.\n *\n * this is third line.\n *\n * - item1\n * - item2\n * - item3\n *\n * ```js\n * let foo = 'this is code block'\n * ```\n *\n * | Left align | Right align | Center align |\n * |:-----------|------------:|:------------:|\n * | This       |        This |     This     |\n * | column     |      column |    column    |\n *\n * @implements MyInterface1\n * @implements XMLHttpRequest\n *\n * @example\n * let foo = 10;\n * let bar = 20;\n * @example\n * for (let v of values) {\n *   let foo = v;\n * }\n * @deprecated use MyClass1Ex instead of this class.\n * @experimental this class is dangerous.\n * @todo this is todo1\n * @todo this is todo2\n * @see http://example.com\n * @see {@link MyClass2}\n * @see {@link SuperMyClass1#superMethod}\n * @since 1.2.3\n * @version 0.0.1\n */\nexport default class MyClass1 extends SuperMyClass1 {\n  /**\n   * this is staticValue(get) desc.\n   * @type {number}\n   */\n  static get staticValue() {\n  }\n\n  /**\n   * this is staticValue(set) desc.\n   * @type {number}\n   */\n  static set staticValue(v) {\n  }\n\n  /**\n   * this is staticMethod1 desc.\n   */\n  static staticMethod1() {\n    /**\n     * this is static p1 desc.\n     * @type {number}\n     */\n    this.p1 = 123;\n\n    /**\n     * this is static p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = 123;\n\n    /**\n     * this is static p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = 123;\n  }\n\n  /**\n   * this is staticMethod2 desc.\n   * @protected\n   */\n  static staticMethod2() {\n  }\n\n  /**\n   * this is staticMethod3 desc.\n   * @private\n   */\n  static staticMethod3() {\n  }\n\n  /**\n   * this is constructor desc.\n   * @param {number} p1 - this is p1 desc.\n   */\n  constructor(p1) {\n    super(p1);\n\n    /**\n     * this is p1 desc.\n     * @type {number}\n     */\n    this.p1 = p1;\n\n    /**\n     * this is p2 desc.\n     * @type {number}\n     * @protected\n     */\n    this.p2 = p1;\n\n    /**\n     * this is p3 desc.\n     * @type {number}\n     * @private\n     */\n    this.p3 = p1;\n  }\n\n  /**\n   * this is value(get) desc.\n   * @type {number}\n   */\n  get value() {\n  }\n\n  /**\n   * this is value(set) desc.\n   * @type {number}\n   */\n  set value(v) {\n  }\n\n  /**\n   * this is method1 desc.\n   * @param {number[]} p1 this is p1(simple) desc.\n   * @param {!number} p2 this is p2(not nullable) desc.\n   * @param {?number} p3 this is p3(nullable) desc.\n   * @param {(number|string[])} p4 this is p4(union) desc.\n   * @param {number} [p5] this is p5(optional) desc.\n   * @param {number} [p6=123] this is p6(default) desc.\n   * @param {{a: number, b: string}} p7 this is p7(object) desc.\n   * @param {Object} p8 this is p8(nest) desc.\n   * @param {number} p8.a this is p8.a(nest) desc.\n   * @param {string} p8.b this is p8.b(nest) desc.\n   * @param {!(MyClass2|MyClass3[]|{a: number, b: string})} p9 - this is p9(complex) desc.\n   * this is second line.\n   *\n   * @return {Object} this is return desc.\n   * @property {number} p1 this is p1 of return desc.\n   * @property {string[]} p2 this is p2 of return desc.\n   *\n   * @deprecated\n   * @experimental\n   * @todo this is todo1\n   * @see http://example.com\n   *\n   * @since 1.2.3\n   * @version 0.0.1\n   *\n   * @abstract\n   * @override\n   * @throws {MyError1} this is throws MyError1 desc.\n   * @throws {MyError2} this is throws MyError2 desc.\n   * @emits {MyEvent1} this is emits MyEvent1 desc.\n   * @emits {MyEvent2} this is emits MyEvent2 desc.\n   * @listens {MyEvent1} this is listens MyEvent1 desc.\n   * @listens {MyEvent2} this is listens MyEvent2 desc.\n   */\n  method1(p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n  }\n\n  /**\n   * this is method2 desc.\n   * @protected\n   */\n  method2(){}\n\n  /**\n   * this is method3 desc.\n   * @private\n   */\n  method3(){}\n}\n\n/**\n * this is MyClass2 desc.\n */\nexport class MyClass2 extends MyClass1 {\n}\n\n/**\n * this is MyClass3 desc.\n */\nclass MyClass3 extends MyClass2 {\n}\n\n/**\n * this is MyClass4 desc.\n * @interface\n */\nclass MyClass4 {\n}\n\n/**\n * this is MyClass5 desc.\n * @implements MyClass1\n */\nclass MyClass5 {\n}\n\n/**\n * this is MyClass6 desc.\n */\nclass MyClass6 extends MyClass5 {\n}\n\n/**\n * this is MyClass999 desc.\n * @ignore\n */\nexport class MyClass999 {\n}\n",
    "interface": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/MyError.js",
    "memberof": null,
    "longname": "src/MyError.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\n * this is MyError1 desc.\n */\nclass MyError1{\n}\n\n/**\n * @external MyError2\n * @see http://example.com\n */\n\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MyError1",
    "memberof": "src/MyError.js",
    "longname": "src/MyError.js~MyError1",
    "access": null,
    "export": false,
    "importPath": "esdoc-test-fixture/src/MyError.js",
    "importStyle": null,
    "description": "this is MyError1 desc.",
    "lineNumber": 4,
    "content": "/**\n * this is MyError1 desc.\n */\nclass MyError1{\n}\n\n/**\n * @external MyError2\n * @see http://example.com\n */\n\n",
    "interface": false
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "MyError2",
    "memberof": "src/MyError.js",
    "longname": "src/MyError.js~MyError2",
    "access": null,
    "description": null,
    "see": [
      "http://example.com"
    ],
    "content": "/**\n * this is MyError1 desc.\n */\nclass MyError1{\n}\n\n/**\n * @external MyError2\n * @see http://example.com\n */\n\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/MyEvent.js",
    "memberof": null,
    "longname": "src/MyEvent.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\n * this is MyEvent1 desc.\n */\nclass MyEvent1{\n}\n\n/**\n * @external MyEvent2\n * @see http://example.com\n */\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MyEvent1",
    "memberof": "src/MyEvent.js",
    "longname": "src/MyEvent.js~MyEvent1",
    "access": null,
    "export": false,
    "importPath": "esdoc-test-fixture/src/MyEvent.js",
    "importStyle": null,
    "description": "this is MyEvent1 desc.",
    "lineNumber": 4,
    "content": "/**\n * this is MyEvent1 desc.\n */\nclass MyEvent1{\n}\n\n/**\n * @external MyEvent2\n * @see http://example.com\n */\n",
    "interface": false
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "MyEvent2",
    "memberof": "src/MyEvent.js",
    "longname": "src/MyEvent.js~MyEvent2",
    "access": null,
    "description": null,
    "see": [
      "http://example.com"
    ],
    "content": "/**\n * this is MyEvent1 desc.\n */\nclass MyEvent1{\n}\n\n/**\n * @external MyEvent2\n * @see http://example.com\n */\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/MyInterface.js",
    "memberof": null,
    "longname": "src/MyInterface.js",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "content": "/**\n * this is MyInterface1 desc.\n * @interface\n */\nexport class MyInterface1 {\n}\n\n/**\n * this is MyInterface2 desc.\n * @interface\n */\nexport class MyInterface2 {\n}\n\n/**\n * this is MyInterface3 desc.\n * @interface\n */\nexport class MyInterface3 {\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MyInterface1",
    "memberof": "src/MyInterface.js",
    "longname": "src/MyInterface.js~MyInterface1",
    "access": null,
    "export": true,
    "importPath": "esdoc-test-fixture/src/MyInterface.js",
    "importStyle": "{MyInterface1}",
    "description": "this is MyInterface1 desc.",
    "lineNumber": 5,
    "content": "/**\n * this is MyInterface1 desc.\n * @interface\n */\nexport class MyInterface1 {\n}\n\n/**\n * this is MyInterface2 desc.\n * @interface\n */\nexport class MyInterface2 {\n}\n\n/**\n * this is MyInterface3 desc.\n * @interface\n */\nexport class MyInterface3 {\n}\n",
    "interface": true
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MyInterface2",
    "memberof": "src/MyInterface.js",
    "longname": "src/MyInterface.js~MyInterface2",
    "access": null,
    "export": true,
    "importPath": "esdoc-test-fixture/src/MyInterface.js",
    "importStyle": "{MyInterface2}",
    "description": "this is MyInterface2 desc.",
    "lineNumber": 12,
    "content": "/**\n * this is MyInterface1 desc.\n * @interface\n */\nexport class MyInterface1 {\n}\n\n/**\n * this is MyInterface2 desc.\n * @interface\n */\nexport class MyInterface2 {\n}\n\n/**\n * this is MyInterface3 desc.\n * @interface\n */\nexport class MyInterface3 {\n}\n",
    "interface": true
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MyInterface3",
    "memberof": "src/MyInterface.js",
    "longname": "src/MyInterface.js~MyInterface3",
    "access": null,
    "export": true,
    "importPath": "esdoc-test-fixture/src/MyInterface.js",
    "importStyle": "{MyInterface3}",
    "description": "this is MyInterface3 desc.",
    "lineNumber": 19,
    "content": "/**\n * this is MyInterface1 desc.\n * @interface\n */\nexport class MyInterface1 {\n}\n\n/**\n * this is MyInterface2 desc.\n * @interface\n */\nexport class MyInterface2 {\n}\n\n/**\n * this is MyInterface3 desc.\n * @interface\n */\nexport class MyInterface3 {\n}\n",
    "interface": true
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/MyTypedef.js",
    "memberof": null,
    "longname": "src/MyTypedef.js",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "content": "/**\n * this is MyTypedef1 desc.\n * @typedef {Object} MyTypedef1\n * @property {number} p1 this is p1 desc.\n * @property {string[]} p2 this is p2 desc.\n */\n"
  },
  {
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "MyTypedef1",
    "memberof": "src/MyTypedef.js",
    "longname": "src/MyTypedef.js~MyTypedef1",
    "access": null,
    "description": "this is MyTypedef1 desc.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "p1",
        "description": "this is p1 desc."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "p2",
        "description": "this is p2 desc."
      }
    ],
    "content": "/**\n * this is MyTypedef1 desc.\n * @typedef {Object} MyTypedef1\n * @property {number} p1 this is p1 desc.\n * @property {string[]} p2 this is p2 desc.\n */\n",
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "MyTypedef1"
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/OtherClass/SuperMyClass.js",
    "memberof": null,
    "longname": "src/OtherClass/SuperMyClass.js",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SuperMyClass2",
    "memberof": "src/OtherClass/SuperMyClass.js",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass2",
    "access": null,
    "export": true,
    "importPath": "esdoc-test-fixture/src/OtherClass/SuperMyClass.js",
    "importStyle": "{SuperMyClass2}",
    "description": "this is SuperMyClass2 desc.",
    "lineNumber": 5,
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n",
    "interface": false,
    "extends": [
      "XMLHttpRequest"
    ],
    "implements": [
      "MyInterface3"
    ]
  },
  {
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "ultraStaticValue",
    "memberof": "src/OtherClass/SuperMyClass.js~SuperMyClass2",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass2.ultraStaticValue",
    "access": null,
    "description": "",
    "lineNumber": 8,
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n"
  },
  {
    "kind": "set",
    "static": true,
    "variation": null,
    "name": "ultraStaticValue",
    "memberof": "src/OtherClass/SuperMyClass.js~SuperMyClass2",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass2.ultraStaticValue",
    "access": null,
    "description": "",
    "lineNumber": 12,
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n"
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "ultraStaticMethod",
    "memberof": "src/OtherClass/SuperMyClass.js~SuperMyClass2",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass2.ultraStaticMethod",
    "access": null,
    "description": "",
    "lineNumber": 16,
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n"
  },
  {
    "kind": "member",
    "static": true,
    "variation": null,
    "name": "ultraP1",
    "memberof": "src/OtherClass/SuperMyClass.js~SuperMyClass2",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass2.ultraP1",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n"
  },
  {
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "ultraValue",
    "memberof": "src/OtherClass/SuperMyClass.js~SuperMyClass2",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass2#ultraValue",
    "access": null,
    "description": "",
    "lineNumber": 25,
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n"
  },
  {
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "ultraValue",
    "memberof": "src/OtherClass/SuperMyClass.js~SuperMyClass2",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass2#ultraValue",
    "access": null,
    "description": "",
    "lineNumber": 29,
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n"
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "ultraMethod",
    "memberof": "src/OtherClass/SuperMyClass.js~SuperMyClass2",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass2#ultraMethod",
    "access": null,
    "description": "",
    "lineNumber": 33,
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n"
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "ultraP1",
    "memberof": "src/OtherClass/SuperMyClass.js~SuperMyClass2",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass2#ultraP1",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SuperMyClass1",
    "memberof": "src/OtherClass/SuperMyClass.js",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass1",
    "access": null,
    "export": true,
    "importPath": "esdoc-test-fixture/src/OtherClass/SuperMyClass.js",
    "importStyle": "SuperMyClass1",
    "description": "this is SuperMyClass1.",
    "lineNumber": 44,
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n",
    "interface": false,
    "extends": [
      "SuperMyClass2"
    ],
    "implements": [
      "MyInterface2"
    ]
  },
  {
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "superStaticValue",
    "memberof": "src/OtherClass/SuperMyClass.js~SuperMyClass1",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass1.superStaticValue",
    "access": null,
    "description": "",
    "lineNumber": 47,
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n"
  },
  {
    "kind": "set",
    "static": true,
    "variation": null,
    "name": "superStaticValue",
    "memberof": "src/OtherClass/SuperMyClass.js~SuperMyClass1",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass1.superStaticValue",
    "access": null,
    "description": "",
    "lineNumber": 51,
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n"
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "superStaticMethod",
    "memberof": "src/OtherClass/SuperMyClass.js~SuperMyClass1",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass1.superStaticMethod",
    "access": null,
    "description": "",
    "lineNumber": 55,
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n"
  },
  {
    "kind": "member",
    "static": true,
    "variation": null,
    "name": "superP1",
    "memberof": "src/OtherClass/SuperMyClass.js~SuperMyClass1",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass1.superP1",
    "access": null,
    "description": null,
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n"
  },
  {
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "superValue",
    "memberof": "src/OtherClass/SuperMyClass.js~SuperMyClass1",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass1#superValue",
    "access": null,
    "description": "",
    "lineNumber": 64,
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n"
  },
  {
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "superValue",
    "memberof": "src/OtherClass/SuperMyClass.js~SuperMyClass1",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass1#superValue",
    "access": null,
    "description": "",
    "lineNumber": 68,
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n"
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "superMethod",
    "memberof": "src/OtherClass/SuperMyClass.js~SuperMyClass1",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass1#superMethod",
    "access": null,
    "description": "",
    "lineNumber": 72,
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n"
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "superP1",
    "memberof": "src/OtherClass/SuperMyClass.js~SuperMyClass1",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass1#superP1",
    "access": null,
    "description": null,
    "lineNumber": 76,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n"
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "method1",
    "memberof": "src/OtherClass/SuperMyClass.js~SuperMyClass1",
    "longname": "src/OtherClass/SuperMyClass.js~SuperMyClass1#method1",
    "access": null,
    "description": "this is method1 desc.",
    "lineNumber": 82,
    "content": "/**\n * this is SuperMyClass2 desc.\n * @implements MyInterface3\n */\nexport class SuperMyClass2 extends XMLHttpRequest{\n  /**\n   */\n  static get ultraStaticValue(){}\n\n  /**\n   */\n  static set ultraStaticValue(v){}\n\n  /**\n   */\n  static ultraStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n\n  /**\n   */\n  get ultraValue(){}\n\n  /**\n   */\n  set ultraValue(v){}\n\n  /**\n   */\n  ultraMethod(){\n    /**\n     * @type {number}\n     */\n    this.ultraP1 = 123;\n  }\n}\n/**\n * this is SuperMyClass1.\n * @implements MyInterface2\n */\nexport default class SuperMyClass1 extends SuperMyClass2 {\n  /**\n   */\n  static get superStaticValue(){}\n\n  /**\n   */\n  static set superStaticValue(v){}\n\n  /**\n   */\n  static superStaticMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   */\n  get superValue(){}\n\n  /**\n   */\n  set superValue(v){}\n\n  /**\n   */\n  superMethod(){\n    /**\n     * @type {number}\n     */\n    this.superP1 = 123;\n  }\n\n  /**\n   * this is method1 desc.\n   */\n  method1(){}\n}\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/external.js",
    "memberof": null,
    "longname": "src/external.js",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "content": "/**\n * @external string\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String\n */\n\n/**\n * @external number\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number\n */\n\n/**\n * @external XMLHttpRequest\n * @see https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest\n */\n\n"
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "memberof": "src/external.js",
    "longname": "src/external.js~string",
    "access": null,
    "description": null,
    "see": [
      "https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String"
    ],
    "content": "/**\n * @external string\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String\n */\n\n/**\n * @external number\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number\n */\n\n/**\n * @external XMLHttpRequest\n * @see https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest\n */\n\n"
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "memberof": "src/external.js",
    "longname": "src/external.js~number",
    "access": null,
    "description": null,
    "see": [
      "https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number"
    ],
    "content": "/**\n * @external string\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String\n */\n\n/**\n * @external number\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number\n */\n\n/**\n * @external XMLHttpRequest\n * @see https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest\n */\n\n"
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "memberof": "src/external.js",
    "longname": "src/external.js~XMLHttpRequest",
    "access": null,
    "description": null,
    "see": [
      "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest"
    ],
    "content": "/**\n * @external string\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String\n */\n\n/**\n * @external number\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number\n */\n\n/**\n * @external XMLHttpRequest\n * @see https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest\n */\n\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/myFunction.js",
    "memberof": null,
    "longname": "src/myFunction.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\n * this is myFunction1 desc.\n */\nexport default function myFunction1(p1){\n}\n\n/**\n * this is myFunction2 desc.\n * @param {number} p1 - this is p1 desc.\n * @param {string} p2 this is p2 desc.\n */\nexport function myFunction2(p1, p2){\n}\n\n/**\n * this is myFunction3 desc.\n * @return {number} this is return desc.\n */\nexport let myFunction3 = function(){\n};\n\n/**\n * this is myFunction4 desc.\n * @param {number} p1\n * @param {string} p2\n * @return {number} this is return desc.\n */\nfunction myFunction4(p1, p2){\n}\n\n/**\n * this is myFunction5 desc.\n * @param {number} p1\n * @param {string} p2\n * @return {Object} this is return desc.\n * @property {number} p1 - this is p1 of return value.\n */\nlet myFunction5 = function(p1, p2){};\n"
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "myFunction1",
    "memberof": "src/myFunction.js",
    "longname": "src/myFunction.js~myFunction1",
    "access": null,
    "export": true,
    "importPath": "esdoc-test-fixture/src/myFunction.js",
    "importStyle": "myFunction1",
    "description": "this is myFunction1 desc.",
    "lineNumber": 4,
    "content": "/**\n * this is myFunction1 desc.\n */\nexport default function myFunction1(p1){\n}\n\n/**\n * this is myFunction2 desc.\n * @param {number} p1 - this is p1 desc.\n * @param {string} p2 this is p2 desc.\n */\nexport function myFunction2(p1, p2){\n}\n\n/**\n * this is myFunction3 desc.\n * @return {number} this is return desc.\n */\nexport let myFunction3 = function(){\n};\n\n/**\n * this is myFunction4 desc.\n * @param {number} p1\n * @param {string} p2\n * @return {number} this is return desc.\n */\nfunction myFunction4(p1, p2){\n}\n\n/**\n * this is myFunction5 desc.\n * @param {number} p1\n * @param {string} p2\n * @return {Object} this is return desc.\n * @property {number} p1 - this is p1 of return value.\n */\nlet myFunction5 = function(p1, p2){};\n"
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "myFunction2",
    "memberof": "src/myFunction.js",
    "longname": "src/myFunction.js~myFunction2",
    "access": null,
    "export": true,
    "importPath": "esdoc-test-fixture/src/myFunction.js",
    "importStyle": "{myFunction2}",
    "description": "this is myFunction2 desc.",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "p1",
        "description": "this is p1 desc."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "p2",
        "description": "this is p2 desc."
      }
    ],
    "content": "/**\n * this is myFunction1 desc.\n */\nexport default function myFunction1(p1){\n}\n\n/**\n * this is myFunction2 desc.\n * @param {number} p1 - this is p1 desc.\n * @param {string} p2 this is p2 desc.\n */\nexport function myFunction2(p1, p2){\n}\n\n/**\n * this is myFunction3 desc.\n * @return {number} this is return desc.\n */\nexport let myFunction3 = function(){\n};\n\n/**\n * this is myFunction4 desc.\n * @param {number} p1\n * @param {string} p2\n * @return {number} this is return desc.\n */\nfunction myFunction4(p1, p2){\n}\n\n/**\n * this is myFunction5 desc.\n * @param {number} p1\n * @param {string} p2\n * @return {Object} this is return desc.\n * @property {number} p1 - this is p1 of return value.\n */\nlet myFunction5 = function(p1, p2){};\n"
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "myFunction3",
    "memberof": "src/myFunction.js",
    "longname": "src/myFunction.js~myFunction3",
    "access": null,
    "export": true,
    "importPath": "esdoc-test-fixture/src/myFunction.js",
    "importStyle": "{myFunction3}",
    "description": "this is myFunction3 desc.",
    "lineNumber": 19,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "this is return desc."
    },
    "content": "/**\n * this is myFunction1 desc.\n */\nexport default function myFunction1(p1){\n}\n\n/**\n * this is myFunction2 desc.\n * @param {number} p1 - this is p1 desc.\n * @param {string} p2 this is p2 desc.\n */\nexport function myFunction2(p1, p2){\n}\n\n/**\n * this is myFunction3 desc.\n * @return {number} this is return desc.\n */\nexport let myFunction3 = function(){\n};\n\n/**\n * this is myFunction4 desc.\n * @param {number} p1\n * @param {string} p2\n * @return {number} this is return desc.\n */\nfunction myFunction4(p1, p2){\n}\n\n/**\n * this is myFunction5 desc.\n * @param {number} p1\n * @param {string} p2\n * @return {Object} this is return desc.\n * @property {number} p1 - this is p1 of return value.\n */\nlet myFunction5 = function(p1, p2){};\n"
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "myFunction4",
    "memberof": "src/myFunction.js",
    "longname": "src/myFunction.js~myFunction4",
    "access": null,
    "export": false,
    "importPath": "esdoc-test-fixture/src/myFunction.js",
    "importStyle": null,
    "description": "this is myFunction4 desc.",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "p1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "p2",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "this is return desc."
    },
    "content": "/**\n * this is myFunction1 desc.\n */\nexport default function myFunction1(p1){\n}\n\n/**\n * this is myFunction2 desc.\n * @param {number} p1 - this is p1 desc.\n * @param {string} p2 this is p2 desc.\n */\nexport function myFunction2(p1, p2){\n}\n\n/**\n * this is myFunction3 desc.\n * @return {number} this is return desc.\n */\nexport let myFunction3 = function(){\n};\n\n/**\n * this is myFunction4 desc.\n * @param {number} p1\n * @param {string} p2\n * @return {number} this is return desc.\n */\nfunction myFunction4(p1, p2){\n}\n\n/**\n * this is myFunction5 desc.\n * @param {number} p1\n * @param {string} p2\n * @return {Object} this is return desc.\n * @property {number} p1 - this is p1 of return value.\n */\nlet myFunction5 = function(p1, p2){};\n"
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "myFunction5",
    "memberof": "src/myFunction.js",
    "longname": "src/myFunction.js~myFunction5",
    "access": null,
    "export": false,
    "importPath": "esdoc-test-fixture/src/myFunction.js",
    "importStyle": null,
    "description": "this is myFunction5 desc.",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "p1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "p2",
        "description": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "p1",
        "description": "this is p1 of return value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "this is return desc."
    },
    "content": "/**\n * this is myFunction1 desc.\n */\nexport default function myFunction1(p1){\n}\n\n/**\n * this is myFunction2 desc.\n * @param {number} p1 - this is p1 desc.\n * @param {string} p2 this is p2 desc.\n */\nexport function myFunction2(p1, p2){\n}\n\n/**\n * this is myFunction3 desc.\n * @return {number} this is return desc.\n */\nexport let myFunction3 = function(){\n};\n\n/**\n * this is myFunction4 desc.\n * @param {number} p1\n * @param {string} p2\n * @return {number} this is return desc.\n */\nfunction myFunction4(p1, p2){\n}\n\n/**\n * this is myFunction5 desc.\n * @param {number} p1\n * @param {string} p2\n * @return {Object} this is return desc.\n * @property {number} p1 - this is p1 of return value.\n */\nlet myFunction5 = function(p1, p2){};\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/myVariable.js",
    "memberof": null,
    "longname": "src/myVariable.js",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "content": "/**\n * this is myVariable1 desc.\n * @type {Object}\n * @property {number} p1 this is p1 desc.\n * @property {string[]} p2 this is p2 desc.\n */\nexport default myVariable1 = {};\n\n/**\n * this is myVariable2 desc.\n * @type {number}\n */\nexport let myVariable2 = 123;\n\n/**\n * this is myVariable3 desc.\n * @type {number}\n */\nlet myVariable3 = 123;\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "myVariable1",
    "memberof": "src/myVariable.js",
    "longname": "src/myVariable.js~myVariable1",
    "access": null,
    "export": true,
    "importPath": "esdoc-test-fixture/src/myVariable.js",
    "importStyle": "myVariable1",
    "description": "this is myVariable1 desc.",
    "lineNumber": 7,
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "p1",
        "description": "this is p1 desc."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "p2",
        "description": "this is p2 desc."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    },
    "content": "/**\n * this is myVariable1 desc.\n * @type {Object}\n * @property {number} p1 this is p1 desc.\n * @property {string[]} p2 this is p2 desc.\n */\nexport default myVariable1 = {};\n\n/**\n * this is myVariable2 desc.\n * @type {number}\n */\nexport let myVariable2 = 123;\n\n/**\n * this is myVariable3 desc.\n * @type {number}\n */\nlet myVariable3 = 123;\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "myVariable2",
    "memberof": "src/myVariable.js",
    "longname": "src/myVariable.js~myVariable2",
    "access": null,
    "export": true,
    "importPath": "esdoc-test-fixture/src/myVariable.js",
    "importStyle": "{myVariable2}",
    "description": "this is myVariable2 desc.",
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "content": "/**\n * this is myVariable1 desc.\n * @type {Object}\n * @property {number} p1 this is p1 desc.\n * @property {string[]} p2 this is p2 desc.\n */\nexport default myVariable1 = {};\n\n/**\n * this is myVariable2 desc.\n * @type {number}\n */\nexport let myVariable2 = 123;\n\n/**\n * this is myVariable3 desc.\n * @type {number}\n */\nlet myVariable3 = 123;\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "myVariable3",
    "memberof": "src/myVariable.js",
    "longname": "src/myVariable.js~myVariable3",
    "access": null,
    "export": false,
    "importPath": "esdoc-test-fixture/src/myVariable.js",
    "importStyle": null,
    "description": "this is myVariable3 desc.",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "content": "/**\n * this is myVariable1 desc.\n * @type {Object}\n * @property {number} p1 this is p1 desc.\n * @property {string[]} p2 this is p2 desc.\n */\nexport default myVariable1 = {};\n\n/**\n * this is myVariable2 desc.\n * @type {number}\n */\nexport let myVariable2 = 123;\n\n/**\n * this is myVariable3 desc.\n * @type {number}\n */\nlet myVariable3 = 123;\n"
  }
]
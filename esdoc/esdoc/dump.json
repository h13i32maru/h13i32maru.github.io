[
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Doc/AbstractDoc.js",
    "memberof": null,
    "longname": "src/Doc/AbstractDoc.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import assert from 'assert';\nimport fs from 'fs';\nimport ParamParser from '../Parser/ParamParser.js';\nimport ASTUtil from '../Util/ASTUtil.js';\n\nexport default class AbstractDoc {\n  constructor(ast, node, pathResolver, commentTags = []){\n    this._ast = ast;\n    this._node = node;\n    this._pathResolver = pathResolver;\n    this._commentTags = commentTags;\n    this._value = {};\n\n    this._apply();\n  }\n\n  get value() {\n    return JSON.parse(JSON.stringify(this._value));\n  }\n\n  _apply() {\n    this['@kind']();\n    this['@static']();\n    this['@variation']();\n    this['@name']();\n    this['@memberof']();\n    this['@longname']();\n    this['@access']();\n    this['@export']();\n    this['@importPath']();\n    this['@importStyle']();\n    this['@desc']();\n    this['@example']();\n    this['@see']();\n    this['@lineNumber']();\n    this['@deprecated']();\n    this['@experimental']();\n    this['@since']();\n    this['@version']();\n    this['@todo']();\n    this['@ignore']();\n    this['@unknown']();\n\n    this['@param']();\n    this['@property']();\n    this['@return']();\n    this['@type']();\n    this['@abstract']();\n    this['@override']();\n    this['@throws']();\n    this['@emits']();\n    this['@listens']();\n    this['@member']();\n    this['@content']();\n    this['@generator']();\n  }\n\n  ['@kind']() {\n    this._value.kind = this._findTagValue(['@kind']);\n  }\n\n  ['@static']() {\n    let tag = this._find(['@static']);\n    if (tag) {\n      if (tag.tagValue === '' || tag.tagValue === 'true') {\n        this._value.static = true;\n      } else {\n        this._value.static = false;\n      }\n    } else {\n      if ('static' in this._node) {\n        this._value.static = this._node.static;\n      } else {\n        this._value.static = true;\n      }\n    }\n  }\n\n  ['@variation']() {\n    this._value.variation = this._findTagValue(['@variation']);\n  }\n\n  ['@name']() {\n    this._value.name = this._findTagValue(['@name']);\n  }\n\n  ['@memberof']() {\n    this._value.memberof = this._findTagValue(['@memberof']);\n  }\n\n  ['@longname']() {\n    let tag = this._find(['@longname']);\n    if (tag) {\n      this._value.longname = tag.tagValue;\n    } else {\n      let memberof = this._value.memberof;\n      let name = this._value.name;\n      let scope = this._value.static ? '.' : '#';\n      if (memberof.includes('~')) {\n        this._value.longname = `${memberof}${scope}${name}`;\n      } else {\n        this._value.longname = `${memberof}~${name}`;\n      }\n    }\n  }\n\n  ['@access']() {\n    let tag = this._find(['@access', '@public', '@private', '@protected']);\n    if (tag) {\n      let access;\n      switch (tag.tagName) {\n        case '@access': access = tag.tagValue; break;\n        case '@public': access = 'public'; break;\n        case '@protected': access = 'protected'; break;\n        case '@private': access = 'private'; break;\n      }\n\n      this._value.access = access;\n    } else {\n      this._value.access = null;\n    }\n  }\n\n  ['@export']() {\n    let tag = this._find(['@export']);\n    if (tag) {\n      if (tag.tagValue === '' || tag.tagValue === 'true') {\n        this._value.export = true;\n      } else {\n        this._value.export = false;\n      }\n      return;\n    }\n\n    let parent = this._node.parent;\n    while (parent) {\n      if (parent.type === 'ExportDefaultDeclaration') {\n        this._value.export = true;\n        return;\n      } else if (parent.type === 'ExportNamedDeclaration') {\n        this._value.export = true;\n        return;\n      }\n\n      parent = parent.parent;\n    }\n\n    this._value.export = false;\n  }\n\n  ['@importPath']() {\n    let tag = this._find(['@importPath']);\n    if (tag) {\n      this._value.importPath = tag.tagValue;\n    } else {\n      this._value.importPath = this._pathResolver.importPath;\n    }\n  }\n\n  ['@importStyle']() {\n    let tag = this._find(['@importStyle']);\n    if (tag) {\n      this._value.importStyle = tag.tagValue;\n      return;\n    }\n\n    let parent = this._node.parent;\n    let name = this._value.name;\n    while (parent) {\n      if (parent.type === 'ExportDefaultDeclaration') {\n        this._value.importStyle = name;\n        return;\n      } else if (parent.type === 'ExportNamedDeclaration') {\n        this._value.importStyle = `{${name}}`;\n        return;\n      }\n      parent = parent.parent;\n    }\n\n    this._value.importStyle = null;\n  }\n\n  ['@desc']() {\n    this._value.description = this._findTagValue(['@desc']);\n  }\n\n  ['@example']() {\n    let tags = this._findAll(['@example']);\n    if (!tags) return;\n    if (!tags.length) return;\n\n    this._value.examples = [];\n    for (let tag of tags) {\n      this._value.examples.push(tag.tagValue);\n    }\n  }\n\n  ['@see']() {\n    let tags = this._findAll(['@see']);\n    if (!tags) return;\n    if (!tags.length) return;\n\n    this._value.see = [];\n    for (let tag of tags) {\n      this._value.see.push(tag.tagValue);\n    }\n  }\n\n  [\"@lineNumber\"]() {\n    let tag = this._find(['@lineNumber']);\n    if (tag) {\n      this._value.lineNumber = tag.tagValue;\n      return;\n    }\n\n    let node = this._node;\n    if (node.loc) {\n      this._value.lineNumber = node.loc.start.line;\n    }\n  }\n\n  ['@deprecated']() {\n    let tag = this._find(['@deprecated']);\n    if (tag) {\n      if (tag.tagValue) {\n        this._value.deprecated = tag.tagValue;\n      } else {\n        this._value.deprecated = true;\n      }\n    }\n  }\n\n  ['@experimental'](){\n    let tag = this._find(['@experimental']);\n    if (tag) {\n      if (tag.tagValue) {\n        this._value.experimental = tag.tagValue;\n      } else {\n        this._value.experimental = true;\n      }\n    }\n  }\n\n  ['@since'](){\n    let tag = this._find(['@since']);\n    if (tag) {\n      this._value.since = tag.tagValue;\n    }\n  }\n\n  ['@version'](){\n    let tag = this._find(['@version']);\n    if (tag) {\n      this._value.version = tag.tagValue;\n    }\n  }\n\n  ['@todo'](){\n    let tags = this._findAll(['@todo']);\n    if (tags) {\n      this._value.todo = [];\n      for (let tag of tags) {\n        this._value.todo.push(tag.tagValue);\n      }\n    }\n  }\n\n  ['@ignore'](){\n    let tag = this._find(['@ignore']);\n    if (tag) {\n      this._value.ignore = true;\n    }\n  }\n\n  ['@unknown']() {\n    for (let tag of this._commentTags) {\n      if (this[tag.tagName]) continue;\n\n      if (!this._value.unknown) this._value.unknown = [];\n      this._value.unknown.push(tag);\n    }\n  }\n\n  ['@param']() {\n    let values = this._findAllTagValues(['@param']);\n    if (!values) return;\n\n    this._value.params = [];\n    for (let value of values) {\n      let {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value);\n      let result = ParamParser.parseParam(typeText, paramName, paramDesc);\n      this._value.params.push(result);\n    }\n  }\n\n  ['@return']() {\n    let value = this._findTagValue(['@return', '@returns']);\n    if (!value) return;\n\n    let {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value, true, false, true);\n    let result = ParamParser.parseParam(typeText, paramName, paramDesc);\n    this._value.return = result;\n  }\n\n  ['@property']() {\n    let values = this._findAllTagValues(['@property']);\n    if (!values) return;\n\n    this._value.properties = [];\n    for (let value of values) {\n      let {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value);\n      let result = ParamParser.parseParam(typeText, paramName, paramDesc);\n      this._value.properties.push(result);\n    }\n  }\n\n  ['@type']() {\n    let value = this._findTagValue(['@type']);\n    if (!value) return;\n\n    let {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value, true, false, false);\n    let result = ParamParser.parseParam(typeText, paramName, paramDesc);\n    this._value.type = result;\n  }\n\n  ['@abstract']() {\n    let tag = this._find(['@abstract']);\n    if (tag) {\n      this._value.abstract = true;\n    }\n  }\n\n  ['@override'](){\n    let tag = this._find(['@override']);\n    if (tag) {\n      this._value.override = true;\n    }\n  }\n\n  ['@throws'](){\n    let values = this._findAllTagValues(['@throws']);\n    if (!values) return;\n\n    this._value.throws = [];\n    for (let value of values) {\n      let {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value, true, false, true);\n      let result = ParamParser.parseParam(typeText, paramName, paramDesc);\n      this._value.throws.push({\n        types: result.types,\n        description: result.description\n      });\n    }\n  }\n\n  ['@emits'](){\n    let values = this._findAllTagValues(['@emits']);\n    if (!values) return;\n\n    this._value.emits = [];\n    for (let value of values) {\n      let {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value, true, false, true);\n      let result = ParamParser.parseParam(typeText, paramName, paramDesc);\n      this._value.emits.push({\n        types: result.types,\n        description: result.description\n      });\n    }\n  }\n\n  ['@listens'](){\n    let values = this._findAllTagValues(['@listens']);\n    if (!values) return;\n\n    this._value.listens = [];\n    for (let value of values) {\n      let {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value, true, false, true);\n      let result = ParamParser.parseParam(typeText, paramName, paramDesc);\n      this._value.listens.push({\n        types: result.types,\n        description: result.description\n      });\n    }\n  }\n\n  ['@member']() {\n    let value = this._findTagValue(['@member']);\n    if (!value) return;\n\n    let {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value, true, true, false);\n    let result = ParamParser.parseParam(typeText, paramName, paramDesc);\n    this._value.type = result;\n  }\n\n  ['@content']() {\n    let value = this._findTagValue(['@content']);\n    if (value) {\n      this._value.content = value;\n    }\n  }\n\n  ['@generator']() {\n    let tag = this._find(['@generator']);\n    if (tag) {\n      this._value.generator = true;\n    }\n  }\n\n  _findAll(names) {\n    let results = [];\n    for (let tag of this._commentTags) {\n      if (names.includes(tag.tagName)) results.push(tag);\n    }\n\n    if (results.length) {\n      return results;\n    } else {\n      return null;\n    }\n  }\n\n  _find(names) {\n    let results = this._findAll(names);\n    if (results && results.length) {\n      return results[results.length - 1];\n    } else {\n      return null;\n    }\n  }\n\n  _findAllTagValues(names) {\n    let tags = this._findAll(names);\n    if (!tags) return;\n\n    let results = [];\n    for (let tag of tags) {\n      results.push(tag.tagValue);\n    }\n\n    return results;\n  }\n\n  _findTagValue(names) {\n    let tag = this._find(names);\n    if (tag) {\n      return tag.tagValue;\n    } else {\n      return null;\n    }\n  }\n\n  _resolveLongname(name) {\n    let importPath = ASTUtil.findPathInImportDeclaration(this._ast, name);\n    if (importPath) {\n      let resolvedPath = this._pathResolver.resolve(importPath);\n      let longname = `${resolvedPath}~${name}`;\n      return longname;\n    }\n\n    return name;\n  }\n\n  _flattenMemberExpression(node) {\n    let results = [];\n    let target = node;\n\n    while(target) {\n      if (target.type === 'ThisExpression') {\n        results.push('this');\n        break;\n      } else if (target.type === 'Identifier') {\n        results.push(target.name);\n        break;\n      } else {\n        results.push(target.property.name);\n        target = target.object;\n      }\n    }\n\n    return results.reverse().join('.');\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AbstractDoc",
    "memberof": "src/Doc/AbstractDoc.js",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Doc/AbstractDoc.js",
    "importStyle": "AbstractDoc",
    "description": null,
    "lineNumber": 6,
    "interface": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#constructor",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "params": [
      {
        "name": "ast",
        "types": [
          "*"
        ]
      },
      {
        "name": "node",
        "types": [
          "*"
        ]
      },
      {
        "name": "pathResolver",
        "types": [
          "*"
        ]
      },
      {
        "name": "commentTags",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_ast",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_ast",
    "access": null,
    "description": null,
    "lineNumber": 8
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_node",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_node",
    "access": null,
    "description": null,
    "lineNumber": 9
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_pathResolver",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_pathResolver",
    "access": null,
    "description": null,
    "lineNumber": 10
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_commentTags",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_commentTags",
    "access": null,
    "description": null,
    "lineNumber": 11
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_value",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_value",
    "access": null,
    "description": null,
    "lineNumber": 12
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "value",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#value",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_apply",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_apply",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@kind",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@kind",
    "access": null,
    "description": null,
    "lineNumber": 58,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@static",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@static",
    "access": null,
    "description": null,
    "lineNumber": 62,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@variation",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@variation",
    "access": null,
    "description": null,
    "lineNumber": 79,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@name",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@name",
    "access": null,
    "description": null,
    "lineNumber": 83,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@memberof",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@memberof",
    "access": null,
    "description": null,
    "lineNumber": 87,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@longname",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@longname",
    "access": null,
    "description": null,
    "lineNumber": 91,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@access",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@access",
    "access": null,
    "description": null,
    "lineNumber": 107,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@export",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@export",
    "access": null,
    "description": null,
    "lineNumber": 124,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@importPath",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@importPath",
    "access": null,
    "description": null,
    "lineNumber": 151,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@importStyle",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@importStyle",
    "access": null,
    "description": null,
    "lineNumber": 160,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@desc",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@desc",
    "access": null,
    "description": null,
    "lineNumber": 183,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@example",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@example",
    "access": null,
    "description": null,
    "lineNumber": 187,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@see",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@see",
    "access": null,
    "description": null,
    "lineNumber": 198,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@lineNumber",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@lineNumber",
    "access": null,
    "description": null,
    "lineNumber": 209,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@deprecated",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@deprecated",
    "access": null,
    "description": null,
    "lineNumber": 222,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@experimental",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@experimental",
    "access": null,
    "description": null,
    "lineNumber": 233,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@since",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@since",
    "access": null,
    "description": null,
    "lineNumber": 244,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@version",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@version",
    "access": null,
    "description": null,
    "lineNumber": 251,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@todo",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@todo",
    "access": null,
    "description": null,
    "lineNumber": 258,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@ignore",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@ignore",
    "access": null,
    "description": null,
    "lineNumber": 268,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@unknown",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@unknown",
    "access": null,
    "description": null,
    "lineNumber": 275,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@param",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@param",
    "access": null,
    "description": null,
    "lineNumber": 284,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@return",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@return",
    "access": null,
    "description": null,
    "lineNumber": 296,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@property",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@property",
    "access": null,
    "description": null,
    "lineNumber": 305,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@type",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@type",
    "access": null,
    "description": null,
    "lineNumber": 317,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@abstract",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@abstract",
    "access": null,
    "description": null,
    "lineNumber": 326,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@override",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@override",
    "access": null,
    "description": null,
    "lineNumber": 333,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@throws",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@throws",
    "access": null,
    "description": null,
    "lineNumber": 340,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@emits",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@emits",
    "access": null,
    "description": null,
    "lineNumber": 355,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@listens",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@listens",
    "access": null,
    "description": null,
    "lineNumber": 370,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@member",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@member",
    "access": null,
    "description": null,
    "lineNumber": 385,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@content",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@content",
    "access": null,
    "description": null,
    "lineNumber": 394,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@generator",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#@generator",
    "access": null,
    "description": null,
    "lineNumber": 401,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_findAll",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_findAll",
    "access": null,
    "description": null,
    "lineNumber": 408,
    "params": [
      {
        "name": "names",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_find",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_find",
    "access": null,
    "description": null,
    "lineNumber": 421,
    "params": [
      {
        "name": "names",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_findAllTagValues",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_findAllTagValues",
    "access": null,
    "description": null,
    "lineNumber": 430,
    "params": [
      {
        "name": "names",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_findTagValue",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_findTagValue",
    "access": null,
    "description": null,
    "lineNumber": 442,
    "params": [
      {
        "name": "names",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_resolveLongname",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_resolveLongname",
    "access": null,
    "description": null,
    "lineNumber": 451,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_flattenMemberExpression",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_flattenMemberExpression",
    "access": null,
    "description": null,
    "lineNumber": 462,
    "params": [
      {
        "name": "node",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Doc/AssignmentDoc.js",
    "memberof": null,
    "longname": "src/Doc/AssignmentDoc.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Logger from 'color-logger';\nimport AbstractDoc from './AbstractDoc.js';\n\nexport default class AssignmentDoc extends AbstractDoc {\n  ['@kind']() {\n    super['@kind']();\n    if (this._value.kind) return;\n\n    this._value.kind = 'variable';\n  }\n\n  ['@name']() {\n    super['@name']();\n    if (this._value.name) return;\n\n    let name = this._flattenMemberExpression(this._node.left).replace(/^this\\./, '');\n    this._value.name = name;\n  }\n\n  ['@memberof']() {\n    super['@memberof']();\n    if (this._value.memberof) return;\n    this._value.memberof = this._pathResolver.filePath;\n  }\n}\n\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AssignmentDoc",
    "memberof": "src/Doc/AssignmentDoc.js",
    "longname": "src/Doc/AssignmentDoc.js~AssignmentDoc",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Doc/AssignmentDoc.js",
    "importStyle": "AssignmentDoc",
    "description": null,
    "lineNumber": 4,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@kind",
    "memberof": "src/Doc/AssignmentDoc.js~AssignmentDoc",
    "longname": "src/Doc/AssignmentDoc.js~AssignmentDoc#@kind",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@name",
    "memberof": "src/Doc/AssignmentDoc.js~AssignmentDoc",
    "longname": "src/Doc/AssignmentDoc.js~AssignmentDoc#@name",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@memberof",
    "memberof": "src/Doc/AssignmentDoc.js~AssignmentDoc",
    "longname": "src/Doc/AssignmentDoc.js~AssignmentDoc#@memberof",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "params": [],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Doc/ClassDoc.js",
    "memberof": null,
    "longname": "src/Doc/ClassDoc.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import AbstractDoc from './AbstractDoc.js';\nimport ParamParser from '../Parser/ParamParser.js';\n\nexport default class ClassDoc extends AbstractDoc {\n  _apply() {\n    super._apply();\n\n    this['@interface']();\n    this['@extends']();\n    this['@implements']();\n  }\n\n  ['@kind']() {\n    super['@kind']();\n    if (this._value.kind) return;\n    this._value.kind = 'class';\n  }\n\n  ['@name']() {\n    super['@name']();\n    if (this._value.name) return;\n    this._value.name = this._node.id.name;\n  }\n\n  ['@memberof']() {\n    super['@memberof']();\n    if (this._value.memberof) return;\n    this._value.memberof = this._pathResolver.filePath;\n  }\n\n  ['@interface']() {\n    let tag = this._find(['@interface']);\n    if (tag) {\n      this._value.interface = ['', 'true', true].includes(tag.tagValue);\n    } else {\n      this._value.interface = false;\n    }\n  }\n\n  ['@extends']() {\n    let values = this._findAllTagValues(['@extends', '@extend']);\n    if (values) {\n      this._value.extends = [];\n      for (let value of values) {\n        let {typeText} = ParamParser.parseParamValue(value, true, false, false);\n        this._value.extends.push(typeText);\n      }\n      return;\n    }\n\n    let node = this._node;\n    if (node.superClass) {\n      let longname = this._resolveLongname(node.superClass.name);\n      this._value.extends = [longname];\n    }\n  }\n\n  ['@implements'](){\n    let values = this._findAllTagValues(['@implements', '@implement']);\n    if (!values) return;\n\n    this._value.implements = [];\n    for (let value of values) {\n      let {typeText} = ParamParser.parseParamValue(value, true, false, false);\n      this._value.implements.push(typeText);\n    }\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ClassDoc",
    "memberof": "src/Doc/ClassDoc.js",
    "longname": "src/Doc/ClassDoc.js~ClassDoc",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Doc/ClassDoc.js",
    "importStyle": "ClassDoc",
    "description": null,
    "lineNumber": 4,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_apply",
    "memberof": "src/Doc/ClassDoc.js~ClassDoc",
    "longname": "src/Doc/ClassDoc.js~ClassDoc#_apply",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@kind",
    "memberof": "src/Doc/ClassDoc.js~ClassDoc",
    "longname": "src/Doc/ClassDoc.js~ClassDoc#@kind",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@name",
    "memberof": "src/Doc/ClassDoc.js~ClassDoc",
    "longname": "src/Doc/ClassDoc.js~ClassDoc#@name",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@memberof",
    "memberof": "src/Doc/ClassDoc.js~ClassDoc",
    "longname": "src/Doc/ClassDoc.js~ClassDoc#@memberof",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@interface",
    "memberof": "src/Doc/ClassDoc.js~ClassDoc",
    "longname": "src/Doc/ClassDoc.js~ClassDoc#@interface",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@extends",
    "memberof": "src/Doc/ClassDoc.js~ClassDoc",
    "longname": "src/Doc/ClassDoc.js~ClassDoc#@extends",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@implements",
    "memberof": "src/Doc/ClassDoc.js~ClassDoc",
    "longname": "src/Doc/ClassDoc.js~ClassDoc#@implements",
    "access": null,
    "description": null,
    "lineNumber": 58,
    "params": [],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Doc/ExternalDoc.js",
    "memberof": null,
    "longname": "src/Doc/ExternalDoc.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Logger from 'color-logger';\nimport AbstractDoc from './AbstractDoc.js';\nimport ParamParser from '../Parser/ParamParser.js';\n\nlet logger = new Logger('ExternalDoc');\n\nexport default class ExternalDoc extends AbstractDoc {\n  _apply() {\n    super._apply();\n\n    delete this._value.export;\n    delete this._value.importPath;\n    delete this._value.importStyle;\n  }\n\n  ['@kind']() {\n    super['@kind']();\n    if (this._value.kind) return;\n    this._value.kind = 'external';\n  }\n\n  ['@name']() {\n    let value = this._findTagValue(['@name', '@external']);\n    if (!value) {\n      logger.w(`can not resolve name.`);\n    }\n\n    this._value.name = value;\n\n    let tags = this._findAll(['@name', '@external']);\n    if (!tags) {\n      logger.w(`can not resolve name.`);\n      return;\n    }\n\n    let name;\n    for (let tag of tags) {\n      let {tagName, tagValue} = tag;\n      if (tagName === '@name') {\n        name = tagValue;\n      } else if (tagName === '@external') {\n        let {typeText, paramDesc} = ParamParser.parseParamValue(tagValue, true, false, true);\n        name = typeText;\n        this._value.externalLink = paramDesc;\n      }\n    }\n\n    this._value.name = name;\n  }\n\n  ['@memberof']() {\n    super['@memberof']();\n    if (this._value.memberof) return;\n    this._value.memberof = this._pathResolver.filePath;\n  }\n\n  ['@longname']() {\n    super['@longname']();\n    if (this._value.longname) return;\n    this._value.longname = this._value.name;\n  }\n}\n\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "logger",
    "memberof": "src/Doc/ExternalDoc.js",
    "longname": "src/Doc/ExternalDoc.js~logger",
    "access": null,
    "export": false,
    "importPath": "esdoc/out/src/Doc/ExternalDoc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ExternalDoc",
    "memberof": "src/Doc/ExternalDoc.js",
    "longname": "src/Doc/ExternalDoc.js~ExternalDoc",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Doc/ExternalDoc.js",
    "importStyle": "ExternalDoc",
    "description": null,
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_apply",
    "memberof": "src/Doc/ExternalDoc.js~ExternalDoc",
    "longname": "src/Doc/ExternalDoc.js~ExternalDoc#_apply",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@kind",
    "memberof": "src/Doc/ExternalDoc.js~ExternalDoc",
    "longname": "src/Doc/ExternalDoc.js~ExternalDoc#@kind",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@name",
    "memberof": "src/Doc/ExternalDoc.js~ExternalDoc",
    "longname": "src/Doc/ExternalDoc.js~ExternalDoc#@name",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@memberof",
    "memberof": "src/Doc/ExternalDoc.js~ExternalDoc",
    "longname": "src/Doc/ExternalDoc.js~ExternalDoc#@memberof",
    "access": null,
    "description": null,
    "lineNumber": 51,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@longname",
    "memberof": "src/Doc/ExternalDoc.js~ExternalDoc",
    "longname": "src/Doc/ExternalDoc.js~ExternalDoc#@longname",
    "access": null,
    "description": null,
    "lineNumber": 57,
    "params": [],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Doc/FileDoc.js",
    "memberof": null,
    "longname": "src/Doc/FileDoc.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import fs from 'fs';\nimport AbstractDoc from './AbstractDoc.js';\n\nexport default class FileDoc extends AbstractDoc {\n  _apply() {\n    super._apply();\n\n    //this['@content']();\n\n    delete this._value.export;\n    delete this._value.importPath;\n    delete this._value.importStyle;\n  }\n\n  ['@kind']() {\n    super['@kind']();\n    if (this._value.kind) return;\n    this._value.kind = 'file';\n  }\n\n  ['@name']() {\n    super['@name']();\n    if (this._value.name) return;\n    this._value.name = this._pathResolver.filePath;\n  }\n\n  ['@longname']() {\n    let value = this._findTagValue(['@longname']);\n    if (value) {\n      this._value.longname = value;\n    } else {\n      this._value.longname = this._value.name;\n    }\n  }\n\n  ['@content']() {\n    super['@content']();\n    if ('content' in this._value) return;\n\n    let filePath = this._pathResolver.fileFullPath;\n    let content = fs.readFileSync(filePath, {encode: 'utf8'}).toString();\n    this._value.content = content;\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FileDoc",
    "memberof": "src/Doc/FileDoc.js",
    "longname": "src/Doc/FileDoc.js~FileDoc",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Doc/FileDoc.js",
    "importStyle": "FileDoc",
    "description": null,
    "lineNumber": 4,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_apply",
    "memberof": "src/Doc/FileDoc.js~FileDoc",
    "longname": "src/Doc/FileDoc.js~FileDoc#_apply",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@kind",
    "memberof": "src/Doc/FileDoc.js~FileDoc",
    "longname": "src/Doc/FileDoc.js~FileDoc#@kind",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@name",
    "memberof": "src/Doc/FileDoc.js~FileDoc",
    "longname": "src/Doc/FileDoc.js~FileDoc#@name",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@longname",
    "memberof": "src/Doc/FileDoc.js~FileDoc",
    "longname": "src/Doc/FileDoc.js~FileDoc#@longname",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@content",
    "memberof": "src/Doc/FileDoc.js~FileDoc",
    "longname": "src/Doc/FileDoc.js~FileDoc#@content",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "params": [],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Doc/FunctionDoc.js",
    "memberof": null,
    "longname": "src/Doc/FunctionDoc.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import AbstractDoc from './AbstractDoc.js';\n\nexport default class FunctionDoc extends AbstractDoc {\n  ['@kind']() {\n    super['@kind']();\n    if (this._value.kind) return;\n    this._value.kind = 'function';\n  }\n\n  ['@name']() {\n    super['@name']();\n    if (this._value.name) return;\n    this._value.name = this._node.id.name;\n  }\n\n  ['@memberof']() {\n    super['@memberof']();\n    if (this._value.memberof) return;\n    this._value.memberof = this._pathResolver.filePath;\n  }\n\n  ['@generator']() {\n    super['@generator']();\n    if ('generator' in this._value) return;\n\n    this._value.generator = this._node.generator;\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FunctionDoc",
    "memberof": "src/Doc/FunctionDoc.js",
    "longname": "src/Doc/FunctionDoc.js~FunctionDoc",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Doc/FunctionDoc.js",
    "importStyle": "FunctionDoc",
    "description": null,
    "lineNumber": 3,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@kind",
    "memberof": "src/Doc/FunctionDoc.js~FunctionDoc",
    "longname": "src/Doc/FunctionDoc.js~FunctionDoc#@kind",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@name",
    "memberof": "src/Doc/FunctionDoc.js~FunctionDoc",
    "longname": "src/Doc/FunctionDoc.js~FunctionDoc#@name",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@memberof",
    "memberof": "src/Doc/FunctionDoc.js~FunctionDoc",
    "longname": "src/Doc/FunctionDoc.js~FunctionDoc#@memberof",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@generator",
    "memberof": "src/Doc/FunctionDoc.js~FunctionDoc",
    "longname": "src/Doc/FunctionDoc.js~FunctionDoc#@generator",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "params": [],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Doc/MemberDoc.js",
    "memberof": null,
    "longname": "src/Doc/MemberDoc.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import AbstractDoc from './AbstractDoc.js';\nimport MethodDoc from './MethodDoc.js';\n\nexport default class MemberDoc extends AbstractDoc {\n  _apply() {\n    super._apply();\n\n    delete this._value.export;\n    delete this._value.importPath;\n    delete this._value.importStyle;\n  }\n\n  ['@kind']() {\n    super['@kind']();\n    if (this._value.kind) return;\n    this._value.kind = 'member';\n  }\n\n  ['@static']() {\n    let tag = this._find(['@static']);\n    if (tag) {\n      let value = ['', 'true', true].includes(tag.tagValue);\n      this._value.static = value;\n      return;\n    }\n\n    let parent = this._node.parent;\n    while (parent) {\n      if (parent.type === 'MethodDefinition') {\n        this._value.static = parent.static;\n        break;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  ['@name']() {\n    let name;\n    let tags = this._findAll(['@name', '@member']);\n    if (tags) {\n      for (let tag of tags) {\n        let {tagName, tagValue} = tag;\n        if (tagName === '@name') {\n          name = tagValue;\n        } else if (tagName === '@member') {\n          let {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value, true, true, false);\n          name = paramName;\n        }\n      }\n\n    } else {\n      let node = this._node;\n      name = this._flattenMemberExpression(node.left).replace(/^this\\./, '');\n    }\n\n    this._value.name = name;\n  }\n\n  ['@memberof']() {\n    MethodDoc.prototype['@memberof'].call(this);\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MemberDoc",
    "memberof": "src/Doc/MemberDoc.js",
    "longname": "src/Doc/MemberDoc.js~MemberDoc",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Doc/MemberDoc.js",
    "importStyle": "MemberDoc",
    "description": null,
    "lineNumber": 4,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_apply",
    "memberof": "src/Doc/MemberDoc.js~MemberDoc",
    "longname": "src/Doc/MemberDoc.js~MemberDoc#_apply",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@kind",
    "memberof": "src/Doc/MemberDoc.js~MemberDoc",
    "longname": "src/Doc/MemberDoc.js~MemberDoc#@kind",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@static",
    "memberof": "src/Doc/MemberDoc.js~MemberDoc",
    "longname": "src/Doc/MemberDoc.js~MemberDoc#@static",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@name",
    "memberof": "src/Doc/MemberDoc.js~MemberDoc",
    "longname": "src/Doc/MemberDoc.js~MemberDoc#@name",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@memberof",
    "memberof": "src/Doc/MemberDoc.js~MemberDoc",
    "longname": "src/Doc/MemberDoc.js~MemberDoc#@memberof",
    "access": null,
    "description": null,
    "lineNumber": 59,
    "params": [],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Doc/MethodDoc.js",
    "memberof": null,
    "longname": "src/Doc/MethodDoc.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import AbstractDoc from './AbstractDoc.js';\nimport ParamParser from '../Parser/ParamParser.js';\n\nexport default class MethodDoc extends AbstractDoc {\n  _apply() {\n    super._apply();\n\n    delete this._value.export;\n    delete this._value.importPath;\n    delete this._value.importStyle;\n  }\n\n  ['@kind']() {\n    AbstractDoc.prototype['@kind'].call(this);\n    if (this._value.kind) return;\n    this._value.kind = this._node.kind;\n  }\n\n  ['@name']() {\n    AbstractDoc.prototype['@name'].call(this);\n    if (this._value.name) return;\n\n    // normally `key.name`, but computed value(aka ['foo']) refers `key.value`.\n    this._value.name = this._node.key.name || this._node.key.value;\n  }\n\n  ['@memberof']() {\n    AbstractDoc.prototype['@memberof'].call(this);\n    if (this._value.memberof) return;\n\n    let memberof;\n    let parent = this._node.parent;\n    while (parent) {\n      if (parent.type === 'ClassDeclaration' || parent.type === 'ClassExpression') {\n        memberof = `${this._pathResolver.filePath}~${parent.id.name}`;\n        this._value.memberof = memberof;\n        return;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  ['@param']() {\n    super['@param']();\n    if (this._value.params) return;\n\n    if (this._value.kind !== 'set') {\n      this._value.params = ParamParser.guessParams(this._node.value.params);\n    }\n  }\n\n  ['@return']() {\n    super['@return']();\n    if (this._value.return) return;\n\n    let result = ParamParser.guessReturnParam(this._node.value.body);\n    if (result) {\n      this._value.return = result;\n    }\n  }\n\n  ['@generator']() {\n    super['@generator']();\n    if ('generator' in this._value) return;\n\n    this._value.generator = this._node.value.generator;\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MethodDoc",
    "memberof": "src/Doc/MethodDoc.js",
    "longname": "src/Doc/MethodDoc.js~MethodDoc",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Doc/MethodDoc.js",
    "importStyle": "MethodDoc",
    "description": null,
    "lineNumber": 4,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_apply",
    "memberof": "src/Doc/MethodDoc.js~MethodDoc",
    "longname": "src/Doc/MethodDoc.js~MethodDoc#_apply",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@kind",
    "memberof": "src/Doc/MethodDoc.js~MethodDoc",
    "longname": "src/Doc/MethodDoc.js~MethodDoc#@kind",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@name",
    "memberof": "src/Doc/MethodDoc.js~MethodDoc",
    "longname": "src/Doc/MethodDoc.js~MethodDoc#@name",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@memberof",
    "memberof": "src/Doc/MethodDoc.js~MethodDoc",
    "longname": "src/Doc/MethodDoc.js~MethodDoc#@memberof",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@param",
    "memberof": "src/Doc/MethodDoc.js~MethodDoc",
    "longname": "src/Doc/MethodDoc.js~MethodDoc#@param",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@return",
    "memberof": "src/Doc/MethodDoc.js~MethodDoc",
    "longname": "src/Doc/MethodDoc.js~MethodDoc#@return",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@generator",
    "memberof": "src/Doc/MethodDoc.js~MethodDoc",
    "longname": "src/Doc/MethodDoc.js~MethodDoc#@generator",
    "access": null,
    "description": null,
    "lineNumber": 62,
    "params": [],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Doc/TypedefDoc.js",
    "memberof": null,
    "longname": "src/Doc/TypedefDoc.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Logger from 'color-logger';\nimport AbstractDoc from './AbstractDoc.js';\nimport ParamParser from '../Parser/ParamParser.js';\n\nlet logger = new Logger('TypedefDoc');\n\nexport default class TypedefDoc extends AbstractDoc {\n  _apply() {\n    super._apply();\n\n    this['@typedef']();\n\n    delete this._value.export;\n    delete this._value.importPath;\n    delete this._value.importStyle;\n  }\n\n  ['@kind']() {\n    super['@kind']();\n    if (this._value.kind) return;\n    this._value.kind = 'typedef';\n  }\n\n  ['@name']() {\n    let tags = this._findAll(['@name', '@typedef']);\n    if (!tags) {\n      logger.w(`can not resolve name.`);\n      return;\n    }\n\n    let name;\n    for (let tag of tags) {\n      let {tagName, tagValue} = tag;\n      if (tagName === '@name') {\n        name = tagValue;\n      } else if (tagName === '@typedef') {\n        let {typeText, paramName, paramDesc} = ParamParser.parseParamValue(tagValue, true, true, false);\n        name = paramName;\n      }\n    }\n\n    this._value.name = name;\n  }\n\n  ['@memberof']() {\n    super['@memberof']();\n    if (this._value.memberof) return;\n\n    let memberof;\n    let parent = this._node.parent;\n    while (parent) {\n      if (parent.type === 'ClassDeclaration') {\n        memberof = `${this._pathResolver.filePath}~${parent.id.name}`;\n        this._value.memberof = memberof;\n        return;\n      }\n      parent = parent.parent;\n    }\n\n    this._value.memberof = this._pathResolver.filePath;\n  }\n\n  ['@typedef']() {\n    let value = this._findTagValue(['@typedef']);\n    if (!value) return;\n\n    let {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value, true, true, false);\n    let result = ParamParser.parseParam(typeText, paramName, paramDesc);\n\n    delete result.description;\n    delete result.nullable;\n    delete result.spread;\n\n    this._value.type = result;\n  }\n}\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "logger",
    "memberof": "src/Doc/TypedefDoc.js",
    "longname": "src/Doc/TypedefDoc.js~logger",
    "access": null,
    "export": false,
    "importPath": "esdoc/out/src/Doc/TypedefDoc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TypedefDoc",
    "memberof": "src/Doc/TypedefDoc.js",
    "longname": "src/Doc/TypedefDoc.js~TypedefDoc",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Doc/TypedefDoc.js",
    "importStyle": "TypedefDoc",
    "description": null,
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_apply",
    "memberof": "src/Doc/TypedefDoc.js~TypedefDoc",
    "longname": "src/Doc/TypedefDoc.js~TypedefDoc#_apply",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@kind",
    "memberof": "src/Doc/TypedefDoc.js~TypedefDoc",
    "longname": "src/Doc/TypedefDoc.js~TypedefDoc#@kind",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@name",
    "memberof": "src/Doc/TypedefDoc.js~TypedefDoc",
    "longname": "src/Doc/TypedefDoc.js~TypedefDoc#@name",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@memberof",
    "memberof": "src/Doc/TypedefDoc.js~TypedefDoc",
    "longname": "src/Doc/TypedefDoc.js~TypedefDoc#@memberof",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@typedef",
    "memberof": "src/Doc/TypedefDoc.js~TypedefDoc",
    "longname": "src/Doc/TypedefDoc.js~TypedefDoc#@typedef",
    "access": null,
    "description": null,
    "lineNumber": 63,
    "params": [],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Doc/VariableDoc.js",
    "memberof": null,
    "longname": "src/Doc/VariableDoc.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Logger from 'color-logger';\nimport AbstractDoc from './AbstractDoc.js';\n\nexport default class VariableDoc extends AbstractDoc {\n  ['@kind']() {\n    super['@kind']();\n    if (this._value.kind) return;\n\n    this._value.kind = 'variable';\n  }\n\n  ['@name']() {\n    super['@name']();\n    if (this._value.name) return;\n\n    this._value.name = this._node.declarations[0].id.name;\n  }\n\n  ['@memberof']() {\n    super['@memberof']();\n    if (this._value.memberof) return;\n    this._value.memberof = this._pathResolver.filePath;\n  }\n}\n\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "VariableDoc",
    "memberof": "src/Doc/VariableDoc.js",
    "longname": "src/Doc/VariableDoc.js~VariableDoc",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Doc/VariableDoc.js",
    "importStyle": "VariableDoc",
    "description": null,
    "lineNumber": 4,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@kind",
    "memberof": "src/Doc/VariableDoc.js~VariableDoc",
    "longname": "src/Doc/VariableDoc.js~VariableDoc#@kind",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@name",
    "memberof": "src/Doc/VariableDoc.js~VariableDoc",
    "longname": "src/Doc/VariableDoc.js~VariableDoc#@name",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "@memberof",
    "memberof": "src/Doc/VariableDoc.js~VariableDoc",
    "longname": "src/Doc/VariableDoc.js~VariableDoc#@memberof",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "params": [],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/ESDoc.js",
    "memberof": null,
    "longname": "src/ESDoc.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import babel from 'babel/polyfill';\nimport fs from 'fs';\nimport path from 'path';\nimport assert from 'assert';\nimport Logger from 'color-logger';\nimport ASTUtil from './Util/ASTUtil.js';\nimport ESParser from './Parser/ESParser';\nimport PathResolver from './Util/PathResolver.js';\nimport DocFactory from './Factory/DocFactory.js';\n\n/**\n * API Documentation Generator.\n *\n * @example\n * let config = {source: './src', destination: './esdoc'};\n * ESDoc.generate(config, (results, config)=>{\n *   console.log(results);\n * });\n */\nexport default class ESDoc {\n  /**\n   * Generate documentation.\n   * @param {ESDocConfig} config - config for generation.\n   * @param {function(results: Object, config: ESDocConfig)} publisher - callback for output html.\n   */\n  static generate(config, publisher) {\n    assert(typeof publisher === 'function');\n    assert(config.source);\n    assert(config.destination);\n\n    this._setDefaultConfig(config);\n\n    Logger.debug = !!config.debug;\n    let includes = config.includes.map((v) => new RegExp(v));\n    let excludes = config.excludes.map((v) => new RegExp(v));\n    let pathPrefix = config.importPathPrefix;\n\n    let packageName = null;\n    let mainFilePath = null;\n    if (config.package) {\n      try {\n        let packageJSON = fs.readFileSync(config.package, {encode: 'utf8'});\n        let packageConfig = JSON.parse(packageJSON);\n        packageName = packageConfig.name;\n        mainFilePath = packageConfig.main;\n      } catch (e) {\n        // ignore\n      }\n    }\n\n    let results = [];\n\n    this._walk(config.source, (filePath)=>{\n      let match = false;\n      for (let reg of includes) {\n        if (filePath.match(reg)) {\n          match = true;\n          break;\n        }\n      }\n      if (!match) return;\n\n      for (let reg of excludes) {\n        if (filePath.match(reg)) return;\n      }\n\n      let values = this._traverse(config.source, filePath, packageName, mainFilePath, pathPrefix);\n      results.push(...values);\n    });\n\n    publisher(results, config);\n  }\n\n  /**\n   * set default config to specified config.\n   * @param {ESDocConfig} config - specified config.\n   * @private\n   */\n  static _setDefaultConfig(config) {\n    if (!config.includes) config.includes = ['\\\\.js$'];\n\n    if (!config.excludes) config.excludes = ['\\\\.config\\\\.js$'];\n\n    if (!config.access) config.access = ['public', 'protected'];\n\n    if (!('onlyExported' in config)) config.onlyExported = true;\n\n    if (!config.readme) config.readme = './README.md';\n\n    if (!config.package) config.package = './package.json';\n\n    if (!config.importPathPrefix) config.importPathPrefix = '';\n\n    if (!config.styles) config.styles = [];\n\n    if (!config.scripts) config.scripts = [];\n  }\n\n  /**\n   * walk recursive in directory.\n   * @param {string} dirPath - target directory path.\n   * @param {function(entryPath: string)} callback - callback for find file.\n   * @private\n   */\n  static _walk(dirPath, callback) {\n    let entries = fs.readdirSync(dirPath);\n\n    for (let entry of entries) {\n      let entryPath = path.resolve(dirPath, entry);\n      let stat = fs.statSync(entryPath);\n\n      if (stat.isFile()) {\n        callback(entryPath);\n      } else if (stat.isDirectory()) {\n        this._walk(entryPath, callback);\n      }\n    }\n  }\n\n  /**\n   * traverse doc comment in JavaScript file.\n   * @param {string} inDirPath - root directory path.\n   * @param {string} filePath - target JavaScript file path.\n   * @param {string} [packageName] - npm package name of target.\n   * @param {string} [mainFilePath] - npm main file path of target.\n   * @param {string} [pathPrefix] - prefix of import path from root directory.\n   * @returns {DocObject[]}\n   * @private\n   */\n  static _traverse(inDirPath, filePath, packageName, mainFilePath, pathPrefix) {\n    let ast = ESParser.parse(filePath);\n    let pathResolver = new PathResolver(inDirPath, filePath, packageName, mainFilePath, pathPrefix);\n    let factory = new DocFactory(ast, pathResolver);\n\n    ASTUtil.traverse(ast, (node, parent)=>{\n      factory.push(node, parent);\n    });\n\n    return factory.results;\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ESDoc",
    "memberof": "src/ESDoc.js",
    "longname": "src/ESDoc.js~ESDoc",
    "access": null,
    "export": true,
    "importPath": "esdoc",
    "importStyle": "ESDoc",
    "description": "API Documentation Generator.",
    "examples": [
      "let config = {source: './src', destination: './esdoc'};\nESDoc.generate(config, (results, config)=>{\n  console.log(results);\n});"
    ],
    "lineNumber": 20,
    "interface": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "generate",
    "memberof": "src/ESDoc.js~ESDoc",
    "longname": "src/ESDoc.js~ESDoc.generate",
    "access": null,
    "description": "Generate documentation.",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "ESDocConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "config for generation."
      },
      {
        "nullable": null,
        "types": [
          "function(results: Object, config: ESDocConfig)"
        ],
        "spread": false,
        "optional": false,
        "name": "publisher",
        "description": "callback for output html."
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "_setDefaultConfig",
    "memberof": "src/ESDoc.js~ESDoc",
    "longname": "src/ESDoc.js~ESDoc._setDefaultConfig",
    "access": "private",
    "description": "set default config to specified config.",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@private",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ESDocConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "specified config."
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "_walk",
    "memberof": "src/ESDoc.js~ESDoc",
    "longname": "src/ESDoc.js~ESDoc._walk",
    "access": "private",
    "description": "walk recursive in directory.",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@private",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dirPath",
        "description": "target directory path."
      },
      {
        "nullable": null,
        "types": [
          "function(entryPath: string)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "callback for find file."
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "_traverse",
    "memberof": "src/ESDoc.js~ESDoc",
    "longname": "src/ESDoc.js~ESDoc._traverse",
    "access": "private",
    "description": "traverse doc comment in JavaScript file.",
    "lineNumber": 130,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DocObject[]}"
      },
      {
        "tagName": "@private",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "inDirPath",
        "description": "root directory path."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "target JavaScript file path."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "packageName",
        "description": "npm package name of target."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "mainFilePath",
        "description": "npm main file path of target."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "pathPrefix",
        "description": "prefix of import path from root directory."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DocObject[]"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/ESDocCLI.js",
    "memberof": null,
    "longname": "src/ESDocCLI.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "#!/usr/bin/env node\nimport assert from 'assert';\nimport fs from 'fs';\nimport path from 'path';\nimport minimist from 'minimist';\nimport ESDoc from './ESDoc.js';\nimport defaultPublisher from './Publisher/publish.js';\n\nexport default class ESDocCLI {\n  constructor(argv) {\n    this._argv = minimist(argv.slice(2));\n    if (this._argv.h || this._argv.help) {\n      this._showHelp();\n      process.exit(0)\n    }\n  }\n\n  exec() {\n    let config;\n    if (this._argv.c) {\n      config = this._createConfigFromJSONFile(this._argv.c);\n    } else if (this._argv._.length) {\n      config = this._createConfigFromPath(this._argv._[0]);\n    } else {\n      this._showHelp();\n      process.exit(1);\n    }\n\n    ESDoc.generate(config, defaultPublisher);\n  }\n\n  _showHelp() {\n    console.log('usage: esdoc [-c esdoc.json | path/to/dir]');\n  }\n\n  _createConfigFromJSONFile(configFilePath) {\n    configFilePath = path.resolve(configFilePath);\n    let configJSON = fs.readFileSync(configFilePath, {encode: 'utf8'});\n    let config = JSON.parse(configJSON);\n\n    return config;\n  }\n\n  _createConfigFromPath(targetPath) {\n    targetPath = path.resolve(targetPath);\n    let stat = fs.statSync(targetPath);\n    let config;\n\n    if (!stat.isDirectory()) {\n      this._showHelp();\n      process.exit(1);\n    }\n\n    let readmeStat = null;\n    try {\n      readmeStat = fs.statSync('./README.md');\n    } catch(e) {\n      // ignore\n    }\n\n    config = {\n      source: targetPath,\n      pattern: '\\\\.js$|\\\\.es6$',\n      destination: '_esdoc_',\n      title: 'NO TITLE',\n      description: 'NO DESCRIPTION',\n      readme: readmeStat ? './README.md' : ''\n    };\n\n    return config;\n  }\n}\n\n// if this file is directory executed, work as CLI.\nlet executedFilePath = fs.realpathSync(process.argv[1]);\nif (executedFilePath === __filename) {\n  let cli = new ESDocCLI(process.argv);\n  cli.exec();\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ESDocCLI",
    "memberof": "src/ESDocCLI.js",
    "longname": "src/ESDocCLI.js~ESDocCLI",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/ESDocCLI.js",
    "importStyle": "ESDocCLI",
    "description": null,
    "lineNumber": 9,
    "interface": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/ESDocCLI.js~ESDocCLI",
    "longname": "src/ESDocCLI.js~ESDocCLI#constructor",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "params": [
      {
        "name": "argv",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_argv",
    "memberof": "src/ESDocCLI.js~ESDocCLI",
    "longname": "src/ESDocCLI.js~ESDocCLI#_argv",
    "access": null,
    "description": null,
    "lineNumber": 11
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "exec",
    "memberof": "src/ESDocCLI.js~ESDocCLI",
    "longname": "src/ESDocCLI.js~ESDocCLI#exec",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_showHelp",
    "memberof": "src/ESDocCLI.js~ESDocCLI",
    "longname": "src/ESDocCLI.js~ESDocCLI#_showHelp",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_createConfigFromJSONFile",
    "memberof": "src/ESDocCLI.js~ESDocCLI",
    "longname": "src/ESDocCLI.js~ESDocCLI#_createConfigFromJSONFile",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "params": [
      {
        "name": "configFilePath",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_createConfigFromPath",
    "memberof": "src/ESDocCLI.js~ESDocCLI",
    "longname": "src/ESDocCLI.js~ESDocCLI#_createConfigFromPath",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "params": [
      {
        "name": "targetPath",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Factory/DocFactory.js",
    "memberof": null,
    "longname": "src/Factory/DocFactory.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Logger from 'color-logger';\nimport CommentParser from '../Parser/CommentParser.js';\nimport FileDoc from '../Doc/FileDoc.js';\nimport ClassDoc from '../Doc/ClassDoc.js';\nimport MethodDoc from '../Doc/MethodDoc.js';\nimport MemberDoc from '../Doc/MemberDoc.js';\nimport FunctionDoc from '../Doc/FunctionDoc.js';\nimport VariableDoc from '../Doc/VariableDoc.js';\nimport AssignmentDoc from '../Doc/AssignmentDoc.js';\nimport TypedefDoc from '../Doc/TypedefDoc.js';\nimport ExternalDoc from '../Doc/ExternalDoc.js';\n\nlet already = Symbol('already');\nlet logger = new Logger('DocFactory');\n\nexport default class DocFactory {\n  get results() {\n    return [...this._results];\n  }\n\n  constructor(ast, pathResolver) {\n    this._ast = ast;\n    this._pathResolver = pathResolver;\n    this._results = [];\n\n    // file doc\n    let doc = new FileDoc(ast, ast, pathResolver, []);\n    this._results.push(doc.value);\n\n    // ast does not child, so only comment.\n    if (ast.body.length === 0 && ast.leadingComments) {\n      let results = this._traverseComments(ast, null, ast.leadingComments);\n      this._results.push(...results);\n    }\n  }\n\n  push(node, parentNode) {\n    if (node === this._ast) return;\n\n    if (node[already]) return;\n\n    let isLastNodeInParent = this._isLastNodeInParent(node, parentNode);\n\n    node[already] = true;\n    Object.defineProperty(node, 'parent', {value: parentNode});\n\n    // unwrap export declaration\n    if (['ExportDefaultDeclaration', 'ExportNamedDeclaration'].includes(node.type)) {\n      parentNode = node;\n      node = this._unwrapExportDeclaration(node);\n      node[already] = true;\n      Object.defineProperty(node, 'parent', {value: parentNode});\n    }\n\n    // for leading comments\n    if (node.leadingComments && node.leadingComments.length) {\n      let results = this._traverseComments(parentNode, node, node.leadingComments);\n      this._results.push(...results);\n    } else {\n      this._workOnNonCommentNode(parentNode, node);\n    }\n\n    // for trailing comments.\n    // traverse with only last node, because prevent duplication of trailing comments.\n    if (node.trailingComments && isLastNodeInParent) {\n      let results = this._traverseComments(parentNode, null, node.trailingComments);\n      this._results.push(...results);\n    }\n  }\n\n  _workOnNonCommentNode(parentNode, node) {\n    let isTopLevel = (node) =>{\n      for (let _node of this._ast.body) {\n        if (node === _node) return true;\n      }\n      return false;\n    };\n\n    let {type} = this._decideType([], node);\n    let kind = null;\n    switch (type) {\n      case 'Class':\n        kind = 'class';\n        break;\n      case 'Method':\n        kind = 'method';\n        break;\n      case 'Member':\n        kind = 'member';\n        break;\n      case 'Function':\n        if (isTopLevel(node)) kind = 'function';\n        break;\n      case 'Variable':\n        if (isTopLevel(node)) kind = 'variable';\n        break;\n      case 'Assignment':\n        if (isTopLevel(node)) kind = 'variable';\n        break;\n    }\n\n    if (kind !== null) {\n      let comments = [{type: 'Block', value: `* @kind ${kind}`}];\n      let results = this._traverseComments(parentNode, node, comments);\n      this._results.push(...results);\n    }\n  }\n\n  _traverseComments(parentNode, node, comments) {\n    if (!node) {\n      let virtualNode = {};\n      Object.defineProperty(virtualNode, 'parent', {value: parentNode});\n      node = virtualNode;\n    }\n\n    let results = [];\n    let lastComment = comments[comments.length - 1];\n    for (let comment of comments) {\n      if (!CommentParser.isESDoc(comment)) continue;\n\n      let tags = CommentParser.parse(comment);\n\n      let doc;\n      if (comment === lastComment) {\n        doc = this._createDoc(node, tags);\n      } else {\n        let virtualNode = {};\n        Object.defineProperty(virtualNode, 'parent', {value: parentNode});\n        doc = this._createDoc(virtualNode, tags);\n      }\n\n      if (doc) results.push(doc.value);\n    }\n\n    return results;\n  }\n\n  _createDoc(node, tags) {\n    let result = this._decideType(tags, node);\n    let type = result.type;\n    node = result.node;\n\n    if (!type) {\n      logger.w(`unresolve: ${node.type}`, node);\n      return null;\n    }\n\n    let clazz;\n    switch (type) {\n      case 'Class':   clazz = ClassDoc; break;\n      case 'Method':  clazz = MethodDoc; break;\n      case 'Member':  clazz = MemberDoc; break;\n      case 'Function': clazz = FunctionDoc; break;\n      case 'Variable': clazz = VariableDoc; break;\n      case 'Assignment': clazz = AssignmentDoc; break;\n      case 'Typedef': clazz = TypedefDoc; break;\n      case 'External': clazz = ExternalDoc; break;\n    }\n\n    if (!clazz) return;\n    if (!node.type) node.type = type;\n\n    return new clazz(this._ast, node, this._pathResolver, tags);\n  }\n\n  _decideType(tags, node) {\n    let type = null;\n    for (let tag of tags) {\n      let tagName = tag.tagName;\n      switch (tagName) {\n        case '@class':    type = 'Class'; break;\n        case '@member':   type = 'Member'; break;\n        case '@method':   type = 'Method'; break;\n        case '@function': type = 'Function'; break;\n        case '@var':      type = 'Variable'; break;\n        case '@typedef':  type = 'Typedef'; break;\n        case '@external': type = 'External'; break;\n      }\n    }\n\n    if (type) return {type, node};\n\n    if (!node) return {type, node};\n\n    switch (node.type) {\n      case 'ClassDeclaration':\n        type = 'Class';\n        break;\n      case 'MethodDefinition':\n        type = 'Method';\n        break;\n      case 'ExpressionStatement':\n      {\n        let result = this._decideExpressionStatementType(node);\n        type = result.type;\n        node = result.node;\n      }\n        break;\n      case 'FunctionDeclaration':\n        type = 'Function';\n        break;\n      case 'VariableDeclaration':\n      {\n        let result = this._decideVariableType(node);\n        type = result.type;\n        node = result.node;\n      }\n        break;\n      case 'AssignmentExpression':\n      {\n        let result = this._decideAssignmentType(node);\n        type = result.type;\n        node = result.node;\n      }\n        break;\n    }\n\n    return {type, node};\n  }\n\n  _decideExpressionStatementType(node) {\n    Object.defineProperty(node.expression, 'parent', {value: node.parent});\n    node = node.expression;\n    node[already] = true;\n\n    let innerType = null;\n    let innerNode = null;\n\n    if (!node.right) return {type: innerType, node: innerNode};\n\n    switch (node.right.type) {\n      case 'FunctionExpression':\n        innerType = 'Function';\n        break;\n      case 'ClassExpression':\n        innerType = 'Class';\n        break;\n      default:\n        if (node.left.type === 'MemberExpression' && node.left.object.type === 'ThisExpression') {\n          return {type: 'Member', node: node};\n        } else {\n          return {type: 'Variable', node: node};\n        }\n    }\n\n    innerNode = node.right;\n    innerNode.id = this._copy(node.left.id || node.left.property);\n    Object.defineProperty(innerNode, 'parent', {value: node.parent});\n    innerNode[already] = true;\n\n    return {type: innerType, node: innerNode};\n  }\n\n  _decideVariableType(node) {\n    let innerType = null;\n    let innerNode = null;\n\n    if (!node.declarations[0].init) return {type: innerType, node: innerNode};\n\n    switch (node.declarations[0].init.type) {\n      case 'FunctionExpression':\n        innerType = 'Function';\n        break;\n      case 'ClassExpression':\n        innerType = 'Class';\n        break;\n      default:\n        return {type: 'Variable', node: node};\n    }\n\n    innerNode = node.declarations[0].init;\n    innerNode.id = this._copy(node.declarations[0].id);\n    Object.defineProperty(innerNode, 'parent', {value: node.parent});\n    innerNode[already] = true;\n\n    return {type: innerType, node: innerNode};\n  }\n\n  _decideAssignmentType(node) {\n    let innerType;\n    let innerNode;\n\n    switch (node.right.type) {\n      case 'FunctionExpression':\n        innerType = 'Function';\n        break;\n      case 'ClassExpression':\n        innerType = 'Class';\n        break;\n      default:\n        return {type: 'Assignment', node: node};\n    }\n\n    innerNode = node.right;\n    innerNode.id = this._copy(node.left.id || node.left.property);\n    Object.defineProperty(innerNode, 'parent', {value: node.parent});\n    innerNode[already] = true;\n\n    return {type: innerType, node: innerNode};\n  }\n\n  _unwrapExportDeclaration(node) {\n    let exportedASTNode = node.declaration;\n    if (!exportedASTNode.leadingComments) exportedASTNode.leadingComments = [];\n    exportedASTNode.leadingComments.push(...node.leadingComments || []);\n\n    if (!exportedASTNode.trailingComments) exportedASTNode.trailingComments = [];\n    exportedASTNode.trailingComments.push(...node.trailingComments || []);\n\n    return exportedASTNode;\n  }\n\n  _isLastNodeInParent(node, parentNode) {\n    if (parentNode && parentNode.body) {\n      let lastNode = parentNode.body[parentNode.body.length - 1];\n      return node === lastNode;\n    }\n\n    return false;\n  }\n\n  _copy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "already",
    "memberof": "src/Factory/DocFactory.js",
    "longname": "src/Factory/DocFactory.js~already",
    "access": null,
    "export": false,
    "importPath": "esdoc/out/src/Factory/DocFactory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "logger",
    "memberof": "src/Factory/DocFactory.js",
    "longname": "src/Factory/DocFactory.js~logger",
    "access": null,
    "export": false,
    "importPath": "esdoc/out/src/Factory/DocFactory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DocFactory",
    "memberof": "src/Factory/DocFactory.js",
    "longname": "src/Factory/DocFactory.js~DocFactory",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Factory/DocFactory.js",
    "importStyle": "DocFactory",
    "description": null,
    "lineNumber": 16,
    "interface": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "results",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "longname": "src/Factory/DocFactory.js~DocFactory#results",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "longname": "src/Factory/DocFactory.js~DocFactory#constructor",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "params": [
      {
        "name": "ast",
        "types": [
          "*"
        ]
      },
      {
        "name": "pathResolver",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_ast",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "longname": "src/Factory/DocFactory.js~DocFactory#_ast",
    "access": null,
    "description": null,
    "lineNumber": 22
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_pathResolver",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "longname": "src/Factory/DocFactory.js~DocFactory#_pathResolver",
    "access": null,
    "description": null,
    "lineNumber": 23
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_results",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "longname": "src/Factory/DocFactory.js~DocFactory#_results",
    "access": null,
    "description": null,
    "lineNumber": 24
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "push",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "longname": "src/Factory/DocFactory.js~DocFactory#push",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "params": [
      {
        "name": "node",
        "types": [
          "*"
        ]
      },
      {
        "name": "parentNode",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_workOnNonCommentNode",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "longname": "src/Factory/DocFactory.js~DocFactory#_workOnNonCommentNode",
    "access": null,
    "description": null,
    "lineNumber": 71,
    "params": [
      {
        "name": "parentNode",
        "types": [
          "*"
        ]
      },
      {
        "name": "node",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_traverseComments",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "longname": "src/Factory/DocFactory.js~DocFactory#_traverseComments",
    "access": null,
    "description": null,
    "lineNumber": 109,
    "params": [
      {
        "name": "parentNode",
        "types": [
          "*"
        ]
      },
      {
        "name": "node",
        "types": [
          "*"
        ]
      },
      {
        "name": "comments",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_createDoc",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "longname": "src/Factory/DocFactory.js~DocFactory#_createDoc",
    "access": null,
    "description": null,
    "lineNumber": 138,
    "params": [
      {
        "name": "node",
        "types": [
          "*"
        ]
      },
      {
        "name": "tags",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_decideType",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "longname": "src/Factory/DocFactory.js~DocFactory#_decideType",
    "access": null,
    "description": null,
    "lineNumber": 166,
    "params": [
      {
        "name": "tags",
        "types": [
          "*"
        ]
      },
      {
        "name": "node",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_decideExpressionStatementType",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "longname": "src/Factory/DocFactory.js~DocFactory#_decideExpressionStatementType",
    "access": null,
    "description": null,
    "lineNumber": 221,
    "params": [
      {
        "name": "node",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_decideVariableType",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "longname": "src/Factory/DocFactory.js~DocFactory#_decideVariableType",
    "access": null,
    "description": null,
    "lineNumber": 254,
    "params": [
      {
        "name": "node",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_decideAssignmentType",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "longname": "src/Factory/DocFactory.js~DocFactory#_decideAssignmentType",
    "access": null,
    "description": null,
    "lineNumber": 279,
    "params": [
      {
        "name": "node",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_unwrapExportDeclaration",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "longname": "src/Factory/DocFactory.js~DocFactory#_unwrapExportDeclaration",
    "access": null,
    "description": null,
    "lineNumber": 302,
    "params": [
      {
        "name": "node",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_isLastNodeInParent",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "longname": "src/Factory/DocFactory.js~DocFactory#_isLastNodeInParent",
    "access": null,
    "description": null,
    "lineNumber": 313,
    "params": [
      {
        "name": "node",
        "types": [
          "*"
        ]
      },
      {
        "name": "parentNode",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_copy",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "longname": "src/Factory/DocFactory.js~DocFactory#_copy",
    "access": null,
    "description": null,
    "lineNumber": 322,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Parser/CommentParser.js",
    "memberof": null,
    "longname": "src/Parser/CommentParser.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export default class CommentParser {\n  /**\n   * @param commentNode\n   * @returns {Tag[]}\n   */\n  static parse(commentNode) {\n    if (!this.isESDoc(commentNode)) return [];\n\n    let comment = commentNode.value;\n\n    // TODO: refactor\n    comment = comment.replace(/^\\*\\s?/, ''); // remove first '*'\n    comment = comment.replace(/ $/, ''); // remove last ' '\n    comment = comment.replace(/^ *\\* ?/gm, ''); // remove line head '*'\n    if (comment.charAt(0) !== '@')  comment = '@desc ' + comment; // auto insert @desc\n    comment = comment.replace(/\\s*$/, ''); // remove tail space.\n    comment = comment.replace(/^(@\\w+)$/gm, '$1 \\\\TRUE'); // auto insert tag text to non-text tag (e.g. @interface)\n    comment = comment.replace(/^(@\\w+)\\s(.*)/gm, '\\\\Z$1\\\\Z$2'); // insert separator (\\\\Z@tag\\\\Ztext)\n    let lines = comment.split('\\\\Z');\n\n    let tagName = '';\n    let tagValue = '';\n    let tags = [];\n    for (let i = 0; i < lines.length; i++) {\n      let line = lines[i];\n      if (line.charAt(0) === '@') {\n        tagName = line;\n        let nextLine = lines[i + 1];\n        if (nextLine.charAt(0) === '@') {\n          tagValue = '';\n        } else {\n          tagValue = nextLine;\n          i++;\n        }\n        tagValue = tagValue.replace('\\\\TRUE', '').replace(/^\\n/, '').replace(/\\n*$/, '');\n        tags.push({tagName, tagValue});\n      }\n    }\n    return tags;\n  }\n\n  static isESDoc(commentNode) {\n    if (commentNode.type !== 'Block') return false;\n    return commentNode.value.charAt(0) === '*';\n  }\n}\n\n/**\n * @typedef {Object} Tag\n * @property {string} tagName\n * @property {*} tagValue\n */\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "CommentParser",
    "memberof": "src/Parser/CommentParser.js",
    "longname": "src/Parser/CommentParser.js~CommentParser",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Parser/CommentParser.js",
    "importStyle": "CommentParser",
    "description": null,
    "lineNumber": 1,
    "interface": false
  },
  {
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "Tag",
    "memberof": "src/Parser/CommentParser.js",
    "longname": "src/Parser/CommentParser.js~Tag",
    "access": null,
    "description": null,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tagName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "tagValue",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Tag"
    }
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "parse",
    "memberof": "src/Parser/CommentParser.js~CommentParser",
    "longname": "src/Parser/CommentParser.js~CommentParser.parse",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Tag[]}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "commentNode",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Tag[]"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "isESDoc",
    "memberof": "src/Parser/CommentParser.js~CommentParser",
    "longname": "src/Parser/CommentParser.js~CommentParser.isESDoc",
    "access": null,
    "description": null,
    "lineNumber": 42,
    "params": [
      {
        "name": "commentNode",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Parser/ESParser.js",
    "memberof": null,
    "longname": "src/Parser/ESParser.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import fs from 'fs-extra';\nimport path from 'path';\nimport espree from 'espree';\n\nexport default class ESParser {\n  static parse(filePath) {\n    let code = fs.readFileSync(filePath, {encode: 'utf8'}).toString();\n\n    if (code.charAt(0) === '#') {\n      code = code.replace(/^#!/, '//');\n    }\n\n    let ast = espree.parse(code, {\n      comments: true,\n      attachComment: true,\n      loc: true,\n      ecmaFeatures: {\n        arrowFunctions: true,\n        blockBindings: true,\n        destructuring: true,\n        regexYFlag: true,\n        regexUFlag: true,\n        templateStrings: true,\n        binaryLiterals: true,\n        octalLiterals: true,\n        unicodeCodePointEscapes: true,\n        defaultParams: true,\n        restParams: true,\n        forOf: true,\n        objectLiteralComputedProperties: true,\n        objectLiteralShorthandMethods: true,\n        objectLiteralShorthandProperties: true,\n        objectLiteralDuplicateProperties: true,\n        generators: true,\n        spread: true,\n        classes: true,\n        modules: true,\n        jsx: true,\n        globalReturn: true\n      }\n    });\n\n    return ast;\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ESParser",
    "memberof": "src/Parser/ESParser.js",
    "longname": "src/Parser/ESParser.js~ESParser",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Parser/ESParser.js",
    "importStyle": "ESParser",
    "description": null,
    "lineNumber": 5,
    "interface": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "parse",
    "memberof": "src/Parser/ESParser.js~ESParser",
    "longname": "src/Parser/ESParser.js~ESParser.parse",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "params": [
      {
        "name": "filePath",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Parser/ParamParser.js",
    "memberof": null,
    "longname": "src/Parser/ParamParser.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Logger from 'color-logger';\nimport assert from 'assert';\nimport ASTUtil from '../Util/ASTUtil.js';\n\nlet logger = new Logger('ParamParser');\n\nexport default class ParamParser {\n  static parseParamValue(value, type = true, name = true, desc = true) {\n    value = value.trim();\n\n    let match;\n    let typeText = null;\n    let paramName = null;\n    let paramDesc = null;\n\n    // e.g {number}\n    if (type) {\n      match = value.match(/^\\{(.*)\\}(\\s+|$)/);\n      if (match) {\n        typeText = match[1];\n        value = value.replace(/^\\{.*\\}\\s*/, '');\n      } else {\n        typeText = '*';\n      }\n    }\n\n    // e.g. [p1=123]\n    if (name) {\n      match = value.match(/^(\\S+)/);\n      if (match) {\n        paramName = match[1];\n        value = value.replace(/^\\S+\\s*/, '')\n      }\n    }\n\n    // e.g. this is p1 desc.\n    if (desc) {\n      match = value.match(/^\\-?\\s*((:?.|\\n)*)$/m);\n      if (match) {\n        paramDesc = match[1];\n      }\n    }\n\n    assert(typeText || paramName || paramDesc, `param is invalid. param = \"${value}\"`);\n\n    return {typeText, paramName, paramDesc};\n  }\n\n  static parseParam(typeText = null, paramName = null, paramDesc = null) {\n    let result = {};\n\n    if (typeText) {\n      // check nullable\n      if (typeText[0] === '?') {\n        result.nullable = true;\n      } else if (typeText[0] === '!') {\n        result.nullable = false;\n      } else {\n        result.nullable = null;\n      }\n      typeText = typeText.replace(/^[?!]/, '');\n\n      // check union\n      if (typeText[0] === '(') {\n        typeText = typeText.replace(/^[(]/, '').replace(/[)]$/, '');\n        result.types = typeText.split('|');\n      } else {\n        result.types = [typeText];\n      }\n\n      if (typeText.indexOf('...') === 0) {\n        result.spread = true;\n      } else {\n        result.spread = false;\n      }\n    }\n\n    if (paramName) {\n      // check optional\n      if (paramName[0] === '[') {\n        result.optional = true;\n        paramName = paramName.replace(/^[\\[]/, '').replace(/[\\]]$/, '');\n      } else {\n        result.optional = false;\n      }\n\n      // check default value\n      let pair = paramName.split('=');\n      if (pair.length === 2) {\n        result.defaultValue = pair[1];\n        try {\n          let raw = JSON.parse(pair[1]);\n          result.defaultRaw = raw;\n        } catch (e) {\n          result.defaultRaw = pair[1];\n        }\n      }\n\n      result.name = pair[0];\n    }\n\n    result.description = paramDesc;\n\n    return result;\n  }\n\n  static guessParams(params) {\n    let _params = [];\n    for (let param of params) {\n      let result = {};\n\n      switch (param.type) {\n        case 'Identifier':\n          // e.g. func(a){}\n          result.name = param.name;\n          result.types = ['*'];\n          break;\n\n        case 'AssignmentPattern':\n          if (param.left.type === 'Identifier') {\n            result.name = param.left.name;\n          } else if (param.left.type === 'ObjectPattern') {\n            let names = [];\n            for (let prop of param.left.properties) {\n              names.push(prop.key.name);\n            }\n            result.name = `{${names.join(',')}}`;\n          }\n\n          result.optional = true;\n\n          if (param.right.type === 'Literal') {\n            // e.g. func(a = 10){}\n            result.types = param.right.value === null ? ['*'] : [typeof param.right.value];\n            result.defaultRaw = param.right.value;\n            result.defaultValue = `${result.defaultRaw}`;\n          } else if (param.right.type === 'ArrayExpression') {\n            // e.g. func(a = [123]){}\n            result.types = param.right.elements.length ? [`${typeof param.right.elements[0].value}[]`] : ['*[]'];\n            result.defaultRaw = param.right.elements.map((elm)=> elm.value);\n            result.defaultValue = `${JSON.stringify(result.defaultRaw)}`;\n          } else if(param.right.type === 'ObjectExpression'){\n            // e.g. func(a = {key: 123}){}\n            let obj = {};\n            for (let prop of param.right.properties) {\n              obj[prop.key.name] = prop.value.value;\n            }\n\n            result.types = [`${JSON.stringify(obj)}`];\n            result.defaultRaw = obj;\n            result.defaultValue = `${JSON.stringify(result.defaultRaw)}`;\n          } else if (param.right.type === 'Identifier') {\n            // e.g. func(a = value){}\n            result.types = ['*'];\n            result.defaultRaw = param.right.name;\n            result.defaultValue = `${param.right.name}`;\n          } else {\n            // e.g. func(a = new Foo()){}, func(a = foo()){}\n            // CallExpression, NewExpression\n            result.types = ['*'];\n          }\n          break;\n        case 'RestElement':\n          // e.g. func(...a){}\n          result.name = `${param.argument.name}`;\n          result.types = ['...*'];\n          result.spread = true;\n          break;\n        default:\n          logger.w('unknown param.type', param);\n      }\n\n      _params.push(result);\n    }\n\n    return _params;\n  }\n\n  static guessReturnParam(body) {\n    let result = {};\n\n    ASTUtil.traverse(body, function(node, parent){\n      // `return` in Function is not the body's `return`\n      if (node.type.includes('Function')) {\n        this.skip();\n        return;\n      }\n\n      if (node.type !== 'ReturnStatement') return;\n\n      if (!node.argument) return;\n\n      switch (node.argument.type) {\n        case 'Literal':\n          if (node.argument.value === null) {\n            result.types = result.types || ['*'];\n          } else {\n            result.types = [typeof node.argument.value];\n          }\n          break;\n        case 'TemplateLiteral':\n          result.types = ['string'];\n          break;\n        default:\n          // todo: more better guess.\n          result.types = ['*'];\n      }\n    });\n\n    if (result.types) {\n      return result;\n    }\n\n    return null;\n  }\n}\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "logger",
    "memberof": "src/Parser/ParamParser.js",
    "longname": "src/Parser/ParamParser.js~logger",
    "access": null,
    "export": false,
    "importPath": "esdoc/out/src/Parser/ParamParser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ParamParser",
    "memberof": "src/Parser/ParamParser.js",
    "longname": "src/Parser/ParamParser.js~ParamParser",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Parser/ParamParser.js",
    "importStyle": "ParamParser",
    "description": null,
    "lineNumber": 7,
    "interface": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "parseParamValue",
    "memberof": "src/Parser/ParamParser.js~ParamParser",
    "longname": "src/Parser/ParamParser.js~ParamParser.parseParamValue",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "type",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      },
      {
        "name": "name",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      },
      {
        "name": "desc",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "parseParam",
    "memberof": "src/Parser/ParamParser.js~ParamParser",
    "longname": "src/Parser/ParamParser.js~ParamParser.parseParam",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "params": [
      {
        "name": "typeText",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": null,
        "defaultValue": "null"
      },
      {
        "name": "paramName",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": null,
        "defaultValue": "null"
      },
      {
        "name": "paramDesc",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": null,
        "defaultValue": "null"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "guessParams",
    "memberof": "src/Parser/ParamParser.js~ParamParser",
    "longname": "src/Parser/ParamParser.js~ParamParser.guessParams",
    "access": null,
    "description": null,
    "lineNumber": 107,
    "params": [
      {
        "name": "params",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "guessReturnParam",
    "memberof": "src/Parser/ParamParser.js~ParamParser",
    "longname": "src/Parser/ParamParser.js~ParamParser.guessReturnParam",
    "access": null,
    "description": null,
    "lineNumber": 179,
    "params": [
      {
        "name": "body",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Publisher/builder/ClassDocBuilder.js",
    "memberof": null,
    "longname": "src/Publisher/builder/ClassDocBuilder.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import IceCap from 'ice-cap';\nimport DocBuilder from './DocBuilder.js';\n\nexport default class ClassDocBuilder extends DocBuilder {\n  exec(callback) {\n    var ice = this._buildLayoutDoc();\n    ice.autoDrop = false;\n    var docs = this._find({kind: ['class']});\n    for (var doc of docs) {\n      ice.load('content', this._buildObjectDoc(doc), IceCap.MODE_WRITE);\n      var fileName = this._getOutputFileName(doc);\n      callback(ice.html, fileName);\n    }\n  }\n\n  _buildObjectDoc(doc) {\n    var extendsChain = this._buildExtendsChainHTML(doc);\n    var directSubclass = this._buildDirectSubclassHTML(doc);\n    var indirectSubclass = this._buildIndirectSubclassHTML(doc);\n\n    var ice = new IceCap(this._readTemplate('@class.html'));\n\n    // header\n    if (doc.export && doc.importPath && doc.importStyle) {\n      let link = this._buildFileDocLinkHTML(doc, doc.importPath);\n      ice.into('importPath', `import ${doc.importStyle} from '${link}'`, (code, ice)=>{\n        ice.load('importPathCode', code);\n      });\n    }\n    ice.text('access', doc.access);\n    ice.text('kind', doc.interface ? 'interface' : 'class');\n    ice.load('source', this._buildFileDocLinkHTML(doc, 'source'), 'append');\n    ice.text('since', doc.since, 'append');\n    ice.text('version', doc.version, 'append');\n    ice.load('variation', this._buildVariationHTML(doc), 'append');\n\n    // extends chain\n    ice.load('extendsChain', extendsChain, 'append');\n    ice.load('directSubclass', directSubclass, 'append');\n    ice.load('indirectSubclass', indirectSubclass, 'append');\n    ice.load('implements', this._buildDocsLinkHTML(doc.implements, null, false, ', '), 'append');\n    ice.load('indirectImplements', this._buildDocsLinkHTML(doc._custom_indirect_implements, null, false, ', '), 'append');\n    ice.load('directImplemented', this._buildDocsLinkHTML(doc._custom_direct_implemented, null, false, ', '), 'append');\n    ice.load('indirectImplemented', this._buildDocsLinkHTML(doc._custom_indirect_implemented, null, false, ', '), 'append');\n\n    // self\n    ice.text('name', doc.name);\n    ice.load('description', doc.description);\n    ice.load('deprecated', this._buildDeprecatedHTML(doc));\n    ice.load('experimental', this._buildExperimentalHTML(doc));\n    ice.load('see', this._buildDocsLinkHTML(doc.see), 'append');\n    ice.load('todo', this._buildDocsLinkHTML(doc.todo), 'append');\n\n    ice.into('exampleDocs', doc.examples, (examples, ice)=>{\n      ice.loop('exampleDoc', examples, (i, example, ice)=>{\n        ice.text('exampleCode', example);\n      });\n    });\n\n    // summary\n    ice.load('staticMemberSummary', this._buildSummaryHTML(doc, 'member', 'Members', true));\n    ice.load('staticMethodSummary', this._buildSummaryHTML(doc, 'method', 'Methods', true));\n    ice.load('constructorSummary', this._buildSummaryHTML(doc, 'constructor', 'Constructor', false));\n    ice.load('memberSummary', this._buildSummaryHTML(doc, 'member', 'Members', false));\n    ice.load('methodSummary', this._buildSummaryHTML(doc, 'method', 'Methods', false));\n\n    ice.load('inheritedSummary', this._buildInheritedSummaryHTML(doc), 'append');\n\n    // detail\n    ice.load('staticMemberDetails', this._buildDetailHTML(doc, 'member', 'Members', true));\n    ice.load('staticMethodDetails', this._buildDetailHTML(doc, 'method', 'Methods', true));\n    ice.load('constructorDetails', this._buildDetailHTML(doc, 'constructor', 'Constructors', false));\n    ice.load('memberDetails', this._buildDetailHTML(doc, 'member', 'Members', false));\n    ice.load('methodDetails', this._buildDetailHTML(doc, 'method', 'Methods', false));\n\n    return ice;\n  }\n\n  _buildVariationHTML(doc) {\n    var variationDocs = this._find({memberof: doc.memberof, name: doc.name});\n    var html = [];\n    for (var variationDoc of variationDocs) {\n      if (variationDoc.variation === doc.variation) continue;\n\n      html.push(this._buildDocLinkHTML(variationDoc.longname, `(${variationDoc.variation || 1})`));\n    }\n\n    return html.join(', ');\n  }\n\n  _buildExtendsChainHTML(doc) {\n    if (!doc._custom_extends_chains) return;\n\n    var links = [];\n    for (var longname of doc._custom_extends_chains) {\n      links.push(this._buildDocLinkHTML(longname));\n    }\n\n    links.push(doc.name);\n\n    return links.join(' → ');\n  }\n\n  _buildIndirectSubclassHTML(doc) {\n    if (!doc._custom_indirect_subclasses) return;\n\n    var links = [];\n    for (var longname of doc._custom_indirect_subclasses) {\n      links.push(this._buildDocLinkHTML(longname));\n    }\n    return links.join(', ');\n  }\n\n  _buildDirectSubclassHTML(doc) {\n    if (!doc._custom_direct_subclasses) return;\n\n    var links = [];\n    for (var longname of doc._custom_direct_subclasses) {\n      links.push(this._buildDocLinkHTML(longname));\n    }\n    return links.join(', ');\n  }\n\n  _buildInheritedSummaryHTML(doc) {\n    if (['class', 'interface'].indexOf(doc.kind) === -1) return;\n\n    let longnames = [\n      ...doc._custom_extends_chains || []\n      //...doc.implements || [],\n      //...doc._custom_indirect_implements || [],\n    ];\n\n    let html = [];\n    for (let longname of longnames) {\n      let superDoc = this._find({longname})[0];\n\n      if (!superDoc) continue;\n\n      let targetDocs = this._find({memberof: longname, kind: ['member', 'method', 'get', 'set']});\n\n      targetDocs.sort((a, b)=>{\n        if (a.static !== b.static) return -(a.static - b.static);\n\n        let order = {get: 0, set: 0, member: 1, method: 2};\n        if (order[a.kind] !== order[b.kind]) {\n          return order[a.kind] - order[b.kind];\n        }\n\n        order = {public: 0, protected: 1, private: 2};\n        if (a.access != b.access) return order[a.access] - order[b.access];\n\n        if (a.name !== b.name) return a.name < b.name ? -1 : 1;\n\n        order = {get: 0, set: 1, member: 2};\n        return order[a.kind] - order[b.kind];\n      });\n\n      let title = `From ${superDoc.kind} ${this._buildDocLinkHTML(longname, superDoc.name)}`;\n      let result = this._buildSummaryDoc(targetDocs, '----------', false, superDoc.kind);\n      if (result) {\n        result.load('title', title, IceCap.MODE_WRITE);\n        html.push(result.html);\n      }\n    }\n\n    return html.join('\\n');\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ClassDocBuilder",
    "memberof": "src/Publisher/builder/ClassDocBuilder.js",
    "longname": "src/Publisher/builder/ClassDocBuilder.js~ClassDocBuilder",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Publisher/builder/ClassDocBuilder.js",
    "importStyle": "ClassDocBuilder",
    "description": null,
    "lineNumber": 4,
    "interface": false,
    "extends": [
      "src/Publisher/builder/DocBuilder.js~DocBuilder"
    ]
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "exec",
    "memberof": "src/Publisher/builder/ClassDocBuilder.js~ClassDocBuilder",
    "longname": "src/Publisher/builder/ClassDocBuilder.js~ClassDocBuilder#exec",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildObjectDoc",
    "memberof": "src/Publisher/builder/ClassDocBuilder.js~ClassDocBuilder",
    "longname": "src/Publisher/builder/ClassDocBuilder.js~ClassDocBuilder#_buildObjectDoc",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "params": [
      {
        "name": "doc",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildVariationHTML",
    "memberof": "src/Publisher/builder/ClassDocBuilder.js~ClassDocBuilder",
    "longname": "src/Publisher/builder/ClassDocBuilder.js~ClassDocBuilder#_buildVariationHTML",
    "access": null,
    "description": null,
    "lineNumber": 79,
    "params": [
      {
        "name": "doc",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildExtendsChainHTML",
    "memberof": "src/Publisher/builder/ClassDocBuilder.js~ClassDocBuilder",
    "longname": "src/Publisher/builder/ClassDocBuilder.js~ClassDocBuilder#_buildExtendsChainHTML",
    "access": null,
    "description": null,
    "lineNumber": 91,
    "params": [
      {
        "name": "doc",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildIndirectSubclassHTML",
    "memberof": "src/Publisher/builder/ClassDocBuilder.js~ClassDocBuilder",
    "longname": "src/Publisher/builder/ClassDocBuilder.js~ClassDocBuilder#_buildIndirectSubclassHTML",
    "access": null,
    "description": null,
    "lineNumber": 104,
    "params": [
      {
        "name": "doc",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildDirectSubclassHTML",
    "memberof": "src/Publisher/builder/ClassDocBuilder.js~ClassDocBuilder",
    "longname": "src/Publisher/builder/ClassDocBuilder.js~ClassDocBuilder#_buildDirectSubclassHTML",
    "access": null,
    "description": null,
    "lineNumber": 114,
    "params": [
      {
        "name": "doc",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildInheritedSummaryHTML",
    "memberof": "src/Publisher/builder/ClassDocBuilder.js~ClassDocBuilder",
    "longname": "src/Publisher/builder/ClassDocBuilder.js~ClassDocBuilder#_buildInheritedSummaryHTML",
    "access": null,
    "description": null,
    "lineNumber": 124,
    "params": [
      {
        "name": "doc",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Publisher/builder/DocBuilder.js",
    "memberof": null,
    "longname": "src/Publisher/builder/DocBuilder.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import fs from 'fs';\nimport path from 'path';\nimport escape from 'escape-html';\nimport IceCap from 'ice-cap';\nimport {shorten} from './util.js';\nimport DocResolver from './DocResolver.js';\n\nexport default class DocBuilder {\n  constructor(data, config) {\n    this._data = data;\n    this._config = config;\n    new DocResolver(this).resolve();\n  }\n\n  /**\n   * @abstract\n   * @param callback\n   */\n  exec(callback) {\n  }\n\n  _find(...cond) {\n    return this._orderedFind(null, ...cond);\n  }\n\n  _findByName(name, kind = null) {\n    let docs;\n\n    if (kind) {\n      docs = this._orderedFind(null, {longname: name, kind: kind});\n    } else {\n      docs = this._orderedFind(null, {longname: name});\n    }\n    if (docs.length) return docs;\n\n    if (kind) {\n      docs = this._orderedFind(null, {name: name, kind: kind});\n    } else {\n      docs = this._orderedFind(null, {name: name});\n    }\n    if (docs.length) return docs;\n\n    if (kind) {\n      docs = this._orderedFind(null, {longname: {right: name}, kind: kind});\n    } else {\n      docs = this._orderedFind(null, {longname: {right: name}});\n    }\n    if (docs.length) return docs;\n\n    return [];\n  }\n\n  _orderedFind(order, ...cond) {\n    let data = this._data(...cond);\n\n    if (order) {\n      return data.order(order + ', name asec').map(v => v);\n    } else {\n      return data.order('name asec').map(v => v);\n    }\n  }\n\n  _readTemplate(fileName) {\n    let filePath = path.resolve(__dirname, `./template/${fileName}`);\n    return fs.readFileSync(filePath, {encoding: 'utf-8'});\n  }\n\n  _getInfo() {\n    let config = this._config;\n    let packageObj = {};\n    if (config.package) {\n      let packagePath = config.package;\n      let json = fs.readFileSync(packagePath, {encoding: 'utf-8'});\n      packageObj = JSON.parse(json);\n    }\n\n    let indexInfo = {\n      title: config.title || packageObj.name,\n      desc: config.description || packageObj.description,\n      version: config.version || packageObj.version,\n      url: config.url || packageObj.repository ? packageObj.repository.url : ''\n    };\n\n    return indexInfo;\n  }\n\n  _buildLayoutDoc() {\n    let info = this._getInfo();\n\n    let ice = new IceCap(this._readTemplate('layout.html'), {autoClose: false});\n\n    ice.text('version', info.version);\n    ice.text('url', info.url);\n    ice.attr('url', 'href', info.url);\n\n    // see StaticFileBuilder#exec\n    ice.loop('userScript', this._config.scripts || [], (i, userScript, ice)=>{\n      let name = `user/script/${i}-${path.basename(userScript)}`;\n      ice.attr('userScript', 'src', name);\n    });\n\n    ice.loop('userStyle', this._config.styles || [], (i, userStyle, ice)=>{\n      let name = `user/css/${i}-${path.basename(userStyle)}`;\n      ice.attr('userStyle', 'href', name);\n    });\n\n    ice.load('nav', this._buildNavDoc());\n    return ice;\n  }\n\n  _buildNavDoc() {\n    let html = this._readTemplate('nav.html');\n    let ice = new IceCap(html);\n\n    // class\n    let classDocs = this._find({kind: 'class', interface: false});\n    ice.drop('classWrap', !classDocs.length);\n    ice.loop('classDoc', classDocs, (i, classDoc, ice)=>{\n      ice.load('classDoc', this._buildDocLinkHTML(classDoc.longname));\n    });\n\n    // interface\n    let interfaceDocs = this._find({kind: 'class', interface: true});\n    ice.drop('interfaceWrap', !interfaceDocs.length);\n    ice.loop('interfaceDoc', interfaceDocs, (i, interfaceDoc, ice)=>{\n      ice.load('interfaceDoc', this._buildDocLinkHTML(interfaceDoc.longname));\n    });\n\n    // function\n    let functionDocs = this._find({kind: 'function'});\n    ice.drop('functionWrap', !functionDocs.length);\n    ice.loop('functionDoc', functionDocs, (i, functionDoc, ice)=>{\n      ice.load('functionDoc', this._buildDocLinkHTML(functionDoc.longname));\n    });\n\n    // variable\n    let variableDocs = this._find({kind: 'variable'});\n    ice.drop('variableWrap', !variableDocs.length);\n    ice.loop('variableDoc', variableDocs, (i, variableDoc, ice)=>{\n      ice.load('variableDoc', this._buildDocLinkHTML(variableDoc.longname));\n    });\n\n    // typedef\n    let typedefDocs = this._find({kind: 'typedef'});\n    ice.drop('typedefWrap', !typedefDocs.length);\n    ice.loop('typedefDoc', typedefDocs, (i, typedefDoc, ice)=>{\n      ice.load('typedefDoc', this._buildDocLinkHTML(typedefDoc.longname));\n    });\n\n    // files\n    let fileDocs = this._find({kind: 'file'});\n    ice.drop('fileWrap', !fileDocs.length);\n    ice.loop('fileDoc', fileDocs, (i, fileDoc, ice)=>{\n      ice.load('fileDoc', this._buildFileDocLinkHTML(fileDoc));\n    });\n\n    return ice;\n  }\n\n  _findAccessDocs(doc, kind, isStatic = true) {\n    let cond = {kind, static: isStatic};\n\n    if (doc) cond.memberof = doc.longname;\n\n    switch (kind) {\n      case 'class':\n        cond.interface = false;\n        break;\n      case 'interface':\n        cond.kind = 'class';\n        cond.interface = true;\n        break;\n      case 'member':\n        cond.kind = ['member', 'get', 'set'];\n        break;\n    }\n\n    let publicDocs = this._find(cond, {access: 'public'});\n    let protectedDocs = this._find(cond, {access: 'protected'});\n    let privateDocs = this._find(cond, {access: 'private'});\n    let accessDocs = [['Public', publicDocs], ['Protected', protectedDocs], ['Private', privateDocs]];\n\n    return accessDocs;\n  }\n\n  _buildSummaryHTML(doc, kind, title, isStatic = true) {\n    let accessDocs = this._findAccessDocs(doc, kind, isStatic);\n    let html = '';\n    for (let accessDoc of accessDocs) {\n      let docs = accessDoc[1];\n      if (!docs.length) continue;\n\n      let prefix = '';\n      if (docs[0].static) prefix = 'Static ';\n      let _title = `${prefix}${accessDoc[0]} ${title}`;\n\n      let result = this._buildSummaryDoc(docs, _title);\n      if (result) {\n        html += result.html;\n      }\n    }\n\n    return html;\n  }\n\n  _buildSummaryDoc(docs, title, innerLink) {\n    if (docs.length === 0) return;\n\n    let ice = new IceCap(this._readTemplate('summary.html'));\n\n    ice.text('title', title);\n    ice.loop('target', docs, (i, doc, ice)=>{\n      ice.text('generator', doc.generator ? '*' : '');\n      ice.load('name', this._buildDocLinkHTML(doc.longname, null, innerLink, doc.kind));\n      ice.load('signature', this._buildSignatureHTML(doc));\n      ice.load('description', shorten(doc));\n      ice.text('abstract', doc.abstract ? 'abstract' : '');\n      ice.text('access', doc.access);\n      if (['get', 'set'].includes(doc.kind)) {\n        ice.text('kind', doc.kind);\n      } else {\n        ice.drop('kind');\n      }\n\n      if (['member', 'method', 'get', 'set'].includes(doc.kind)) {\n        ice.text('static', doc.static ? 'static' : '');\n      } else {\n        ice.drop('static');\n      }\n\n      ice.text('since', doc.since);\n      ice.load('deprecated', this._buildDeprecatedHTML(doc));\n      ice.load('experimental', this._buildExperimentalHTML(doc));\n      ice.text('version', doc.version);\n    });\n\n    return ice;\n  }\n\n  _buildDetailHTML(doc, kind, title, isStatic = true) {\n    let accessDocs = this._findAccessDocs(doc, kind, isStatic);\n    let html = '';\n    for (let accessDoc of accessDocs) {\n      let docs = accessDoc[1];\n      if (!docs.length) continue;\n\n      let prefix = '';\n      if (docs[0].static) prefix = 'Static ';\n      let _title = `${prefix}${accessDoc[0]} ${title}`;\n\n      let result = this._buildDetailDocs(docs, _title);\n      if (result) html += result.html;\n    }\n\n    return html;\n  }\n\n  _buildDetailDocs(docs, title) {\n    let ice = new IceCap(this._readTemplate('details.html'));\n\n    ice.text('title', title);\n    ice.drop('title', !docs.length);\n\n    ice.loop('detail', docs, (i, doc, ice)=>{\n      let scope = doc.static ? 'static' : 'instance';\n      ice.attr('anchor', 'id', `${scope}-${doc.kind}-${doc.name}`);\n      ice.text('generator', doc.generator ? '*' : '');\n      ice.text('name', doc.name);\n      ice.load('signature', this._buildSignatureHTML(doc));\n      ice.load('description', doc.description);\n      ice.text('abstract', doc.abstract ? 'abstract' : '');\n      ice.text('access', doc.access);\n      if (['get', 'set'].includes(doc.kind)) {\n        ice.text('kind', doc.kind);\n      } else {\n        ice.drop('kind');\n      }\n      if (doc.export && doc.importPath && doc.importStyle) {\n        let link = this._buildFileDocLinkHTML(doc, doc.importPath);\n        ice.into('importPath', `import ${doc.importStyle} from '${link}'`, (code, ice)=>{\n          ice.load('importPathCode', code);\n        });\n      } else {\n        ice.drop('importPath');\n      }\n\n      if (['member', 'method', 'get', 'set'].includes(doc.kind)) {\n        ice.text('static', doc.static ? 'static' : '');\n      } else {\n        ice.drop('static');\n      }\n\n      ice.load('source', this._buildFileDocLinkHTML(doc, 'source'));\n      ice.text('since', doc.since, 'append');\n      ice.load('deprecated', this._buildDeprecatedHTML(doc));\n      ice.load('experimental', this._buildExperimentalHTML(doc));\n      ice.text('version', doc.version, 'append');\n      ice.load('see', this._buildDocsLinkHTML(doc.see), 'append');\n      ice.load('todo', this._buildDocsLinkHTML(doc.todo), 'append');\n      ice.load('override', this._buildOverrideMethod(doc));\n\n      if (['method', 'constructor', 'function'].indexOf(doc.kind) !== -1) {\n        ice.load('properties', this._buildProperties(doc.params, 'Params:'));\n      } else {\n        ice.load('properties', this._buildProperties(doc.properties, 'Properties:'));\n      }\n\n      // return\n      if (doc.return) {\n        ice.load('returnDescription', doc.return.description);\n        let typeNames = [];\n        for (let typeName of doc.return.types) {\n          typeNames.push(this._buildDocLinkHTML(typeName));\n        }\n        if (typeof doc.return.nullable === 'boolean') {\n          let nullable = doc.return.nullable;\n          ice.load('returnType', typeNames.join(' | ') + ` (nullable: ${nullable})`);\n        } else {\n          ice.load('returnType', typeNames.join(' | '));\n        }\n\n        ice.load('returnProperties', this._buildProperties(doc.properties, 'Return Properties:'));\n      } else {\n        ice.drop('returnParams');\n      }\n\n      // throws\n      if (doc.throws) {\n        ice.loop('throw', doc.throws, (i, exceptionDoc, ice)=>{\n          ice.load('throwName', this._buildDocLinkHTML(exceptionDoc.types[0]));\n          ice.load('throwDesc', exceptionDoc.description);\n        });\n      } else {\n        ice.drop('throwWrap');\n      }\n\n      // fires\n      if (doc.emits) {\n        ice.loop('emit', doc.emits, (i, emitDoc, ice)=>{\n          ice.load('emitName', this._buildDocLinkHTML(emitDoc.types[0]));\n          ice.load('emitDesc', emitDoc.description);\n        });\n      } else {\n        ice.drop('emitWrap');\n      }\n\n      // listens\n      if (doc.listens) {\n        ice.loop('listen', doc.listens, (i, listenDoc, ice)=>{\n          ice.load('listenName', this._buildDocLinkHTML(listenDoc.types[0]));\n          ice.load('listenDesc', listenDoc.description);\n        });\n      } else {\n        ice.drop('listenWrap');\n      }\n\n      // example\n      ice.into('example', doc.examples, (examples, ice)=>{\n        ice.loop('exampleDoc', examples, (i, exampleDoc, ice)=>{\n          ice.text('exampleCode', exampleDoc);\n        });\n      });\n    });\n\n    return ice;\n  }\n\n  _getURL(doc) {\n    let inner = false;\n    if (['variable', 'function', 'member', 'typedef', 'method', 'constructor', 'get', 'set'].includes(doc.kind)) {\n      inner = true\n    }\n\n    if (inner) {\n      let scope = doc.static ? 'static' : 'instance';\n      let fileName = this._getOutputFileName(doc);\n      return `${encodeURIComponent(fileName)}#${scope}-${doc.kind}-${doc.name}`;\n    } else {\n      let fileName = this._getOutputFileName(doc);\n      return encodeURIComponent(fileName);\n    }\n  }\n\n  _getOutputFileName(doc) {\n    let name;\n    switch (doc.kind) {\n      case 'variable':\n        return '@variable.html';\n      case 'function':\n        return '@function.html';\n      case 'member': // fall\n      case 'method': // fall\n      case 'constructor': // fall\n      case 'set': // fall\n      case 'get': // fal\n        let parentDoc = this._find({longname: doc.memberof})[0];\n        return this._getOutputFileName(parentDoc);\n      case 'external':\n        return '@external.html';\n      case 'typedef':\n        return '@typedef.html';\n      case 'class':\n        name = doc.longname.replace(/\\//g, '|');\n        return `@class-${name}.html`;\n      case 'file':\n        name = doc.longname.replace(/\\//g, '|');\n        return `@file-${name}.html`;\n      default:\n        throw new Error('DocBuilder: can not resolve file name.');\n    }\n  }\n\n  _buildFileDocLinkHTML(doc, text = null) {\n    if (!doc) return;\n\n    let fileDoc;\n    if (doc.kind === 'file') {\n      fileDoc = doc;\n    } else {\n      let filePath = doc.longname.split('~')[0];\n      fileDoc = this._find({kind: 'file', longname: filePath})[0];\n    }\n\n    if (!fileDoc) return;\n\n    if (!text) text = fileDoc.name;\n    return `<span><a href=\"${this._getURL(fileDoc)}#lineNumber${doc.lineNumber}\">${text}</a></span>`;\n  }\n\n  _buildDocLinkHTML(longname, text = null, inner = false, kind = null) {\n    if (!longname) return '';\n\n    if (typeof longname !== 'string') throw new Error(JSON.stringify(longname));\n\n    // TODO: support nested Array\n    // Array.<Foo>\n    let isArray = false;\n    let matched = longname.match(/^(.*?)\\[\\]$/) || longname.match(/^Array\\.<(.*?)>$/);\n    if (matched) {\n      longname = matched[1];\n      isArray = true;\n    }\n\n    let doc = this._findByName(longname, kind)[0];\n\n    if (!doc) {\n      // if longname is HTML tag, not escape.\n      let arraySuffix = isArray ? '[]' : '';\n      if (longname.indexOf('<') === 0) {\n        return `<span>${longname}${arraySuffix}</span>`;\n      } else {\n        return `<span>${escape(text || longname)}${arraySuffix}</span>`;\n      }\n    }\n\n    if (doc.kind === 'external') {\n      //text = doc.longname.replace(/^external:\\s*/, '');\n      text = doc.name;\n      let arraySuffix = isArray ? '[]' : '';\n      return `<span><a href=\"${doc.externalLink}\">${text}</a>${arraySuffix}</span>`;\n    } else {\n      text = escape(text || doc.name);\n      let url = this._getURL(doc, inner);\n      let arraySuffix = isArray ? '[]' : '';\n      if (url) {\n        return `<span><a href=\"${url}\">${text}</a>${arraySuffix}</span>`;\n      } else {\n        return `<span>${text}${arraySuffix}</span>`;\n      }\n    }\n  }\n\n  _buildDocsLinkHTML(longnames, text = null, inner = false, separator = '\\n') {\n    if (!longnames) return;\n    if (!longnames.length) return;\n\n    let links = [];\n    for (var longname of longnames) {\n      if (!longname) continue;\n      let link = this._buildDocLinkHTML(longname, text, inner);\n      links.push(`<li>${link}</li>`);\n    }\n\n    if (!links.length) return;\n\n    return `<ul>${links.join(separator)}</ul>`;\n  }\n\n  _buildSignatureHTML(doc) {\n    // call signature\n    let callSignatures = [];\n    if (doc.params) {\n      for (let param of doc.params) {\n        let paramName = param.name;\n        if (paramName.indexOf('.') !== -1) continue;\n\n        let types = [];\n        for (let typeName of param.types) {\n          types.push(this._buildDocLinkHTML(typeName));\n        }\n\n        callSignatures.push(`${paramName}: ${types.join(' | ')}`);\n      }\n    }\n\n    // return signature\n    let returnSignatures = [];\n    if (doc.return) {\n      for (let typeName of doc.return.types) {\n        returnSignatures.push(this._buildDocLinkHTML(typeName));\n      }\n    }\n\n    // type signature\n    let typeSignatures = [];\n    if (doc.type) {\n      for (let typeName of doc.type.types) {\n        typeSignatures.push(this._buildDocLinkHTML(typeName));\n      }\n    }\n\n    // callback is not need type. because type is always function.\n    if (doc.kind === 'function') {\n      typeSignatures = [];\n    }\n\n    let html = '';\n    if (callSignatures.length) {\n      html = `(${callSignatures.join(', ')})`;\n    } else if (['function', 'method'].includes(doc.kind)) {\n      html = '()';\n    }\n    if (returnSignatures.length) html = `${html}: ${returnSignatures.join(' | ')}`;\n    if (typeSignatures.length) html = `${html}: ${typeSignatures.join(' | ')}`;\n\n    return html;\n  }\n\n  _buildProperties(properties = [], title = 'Properties:') {\n    let ice = new IceCap(this._readTemplate('properties.html'));\n\n    ice.text('title', title);\n\n    ice.loop('property', properties, (i, prop, ice)=>{\n      ice.autoDrop = false;\n      ice.attr('property', 'data-depth', prop.name.split('.').length - 1);\n      ice.text('name', prop.name);\n      ice.attr('name', 'data-depth', prop.name.split('.').length - 1);\n      ice.load('description', prop.description);\n\n      let typeNames = [];\n      for (var typeName of prop.types) {\n        typeNames.push(this._buildDocLinkHTML(typeName));\n      }\n      ice.load('type', typeNames.join(' | '));\n\n      // appendix\n      let appendix = [];\n      if (prop.optional) {\n        appendix.push('<li>optional</li>');\n      }\n      if ('defaultValue' in prop) {\n        appendix.push(`<li>default: ${prop.defaultValue}</li>`);\n      }\n      if (typeof prop.nullable === 'boolean') {\n        appendix.push(`<li>nullable: ${prop.nullable}</li>`);\n      }\n      if (appendix.length) {\n        ice.load('appendix', `<ul>${appendix.join('\\n')}</ul>`);\n      } else {\n        ice.text('appendix', '');\n      }\n    });\n\n    if (!properties || properties.length === 0) {\n      ice.drop('properties');\n    }\n\n    return ice;\n  }\n\n  _buildDeprecatedHTML(doc) {\n    if (doc.deprecated) {\n      let deprecated = [`this ${doc.kind} was deprecated.`];\n      if (typeof doc.deprecated === 'string') deprecated.push(doc.deprecated);\n      return deprecated.join(' ');\n    } else {\n      return '';\n    }\n  }\n\n  _buildExperimentalHTML(doc) {\n    if (doc.experimental) {\n      let experimental = [`this ${doc.kind} is experimental.`];\n      if (typeof doc.experimental === 'string') experimental.push(doc.experimental);\n      return experimental.join(' ');\n    } else {\n      return '';\n    }\n  }\n\n  _buildOverrideMethod(doc) {\n    let parentDoc = this._findByName(doc.memberof)[0];\n    if (!parentDoc) return;\n    if (!parentDoc._custom_extends_chains) return;\n\n    let chains = [...parentDoc._custom_extends_chains].reverse();\n    for (let longname of chains) {\n      let superClassDoc = this._findByName(longname)[0];\n      if (!superClassDoc) continue;\n\n      let superMethodDoc = this._find({name: doc.name, memberof: superClassDoc.longname})[0];\n      if (!superMethodDoc) continue;\n\n      return this._buildDocLinkHTML(superMethodDoc.longname, `${superClassDoc.name}#${superMethodDoc.name}`, true);\n    }\n  }\n\n  //_buildAuthorHTML(doc, separator = '\\n') {\n  //  if (!doc.author) return '';\n  //\n  //  var html = [];\n  //  for (var author of doc.author) {\n  //    var matched = author.match(/(.*?) *<(.*?)>/);\n  //    if (matched) {\n  //      var name = matched[1];\n  //      var link = matched[2];\n  //      if (link.indexOf('http') === 0) {\n  //        html.push(`<li><a href=\"${link}\">${name}</a></li>`)\n  //      } else {\n  //        html.push(`<li><a href=\"mailto:${link}\">${name}</a></li>`)\n  //      }\n  //    } else {\n  //      html.push(`<li>${author}</li>`)\n  //    }\n  //  }\n  //\n  //  return `<ul>${html.join(separator)}</ul>`;\n  //}\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DocBuilder",
    "memberof": "src/Publisher/builder/DocBuilder.js",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Publisher/builder/DocBuilder.js",
    "importStyle": "DocBuilder",
    "description": null,
    "lineNumber": 8,
    "interface": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#constructor",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "config",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_data",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_data",
    "access": null,
    "description": null,
    "lineNumber": 10
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_config",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_config",
    "access": null,
    "description": null,
    "lineNumber": 11
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "exec",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#exec",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      }
    ],
    "abstract": true,
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_find",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_find",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "params": [
      {
        "name": "cond",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_findByName",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_findByName",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "kind",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": null,
        "defaultValue": "null"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_orderedFind",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_orderedFind",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "params": [
      {
        "name": "order",
        "types": [
          "*"
        ]
      },
      {
        "name": "cond",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_readTemplate",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_readTemplate",
    "access": null,
    "description": null,
    "lineNumber": 63,
    "params": [
      {
        "name": "fileName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getInfo",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_getInfo",
    "access": null,
    "description": null,
    "lineNumber": 68,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildLayoutDoc",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_buildLayoutDoc",
    "access": null,
    "description": null,
    "lineNumber": 87,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildNavDoc",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_buildNavDoc",
    "access": null,
    "description": null,
    "lineNumber": 111,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_findAccessDocs",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_findAccessDocs",
    "access": null,
    "description": null,
    "lineNumber": 160,
    "params": [
      {
        "name": "doc",
        "types": [
          "*"
        ]
      },
      {
        "name": "kind",
        "types": [
          "*"
        ]
      },
      {
        "name": "isStatic",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildSummaryHTML",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_buildSummaryHTML",
    "access": null,
    "description": null,
    "lineNumber": 186,
    "params": [
      {
        "name": "doc",
        "types": [
          "*"
        ]
      },
      {
        "name": "kind",
        "types": [
          "*"
        ]
      },
      {
        "name": "title",
        "types": [
          "*"
        ]
      },
      {
        "name": "isStatic",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildSummaryDoc",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_buildSummaryDoc",
    "access": null,
    "description": null,
    "lineNumber": 206,
    "params": [
      {
        "name": "docs",
        "types": [
          "*"
        ]
      },
      {
        "name": "title",
        "types": [
          "*"
        ]
      },
      {
        "name": "innerLink",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildDetailHTML",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_buildDetailHTML",
    "access": null,
    "description": null,
    "lineNumber": 240,
    "params": [
      {
        "name": "doc",
        "types": [
          "*"
        ]
      },
      {
        "name": "kind",
        "types": [
          "*"
        ]
      },
      {
        "name": "title",
        "types": [
          "*"
        ]
      },
      {
        "name": "isStatic",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildDetailDocs",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_buildDetailDocs",
    "access": null,
    "description": null,
    "lineNumber": 258,
    "params": [
      {
        "name": "docs",
        "types": [
          "*"
        ]
      },
      {
        "name": "title",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getURL",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_getURL",
    "access": null,
    "description": null,
    "lineNumber": 368,
    "params": [
      {
        "name": "doc",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getOutputFileName",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_getOutputFileName",
    "access": null,
    "description": null,
    "lineNumber": 384,
    "params": [
      {
        "name": "doc",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildFileDocLinkHTML",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_buildFileDocLinkHTML",
    "access": null,
    "description": null,
    "lineNumber": 413,
    "params": [
      {
        "name": "doc",
        "types": [
          "*"
        ]
      },
      {
        "name": "text",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": null,
        "defaultValue": "null"
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildDocLinkHTML",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_buildDocLinkHTML",
    "access": null,
    "description": null,
    "lineNumber": 430,
    "params": [
      {
        "name": "longname",
        "types": [
          "*"
        ]
      },
      {
        "name": "text",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": null,
        "defaultValue": "null"
      },
      {
        "name": "inner",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      },
      {
        "name": "kind",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": null,
        "defaultValue": "null"
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildDocsLinkHTML",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_buildDocsLinkHTML",
    "access": null,
    "description": null,
    "lineNumber": 473,
    "params": [
      {
        "name": "longnames",
        "types": [
          "*"
        ]
      },
      {
        "name": "text",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": null,
        "defaultValue": "null"
      },
      {
        "name": "inner",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      },
      {
        "name": "separator",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "\n",
        "defaultValue": "\n"
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildSignatureHTML",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_buildSignatureHTML",
    "access": null,
    "description": null,
    "lineNumber": 489,
    "params": [
      {
        "name": "doc",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildProperties",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_buildProperties",
    "access": null,
    "description": null,
    "lineNumber": 539,
    "params": [
      {
        "name": "properties",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      },
      {
        "name": "title",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "Properties:",
        "defaultValue": "Properties:"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildDeprecatedHTML",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_buildDeprecatedHTML",
    "access": null,
    "description": null,
    "lineNumber": 582,
    "params": [
      {
        "name": "doc",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildExperimentalHTML",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_buildExperimentalHTML",
    "access": null,
    "description": null,
    "lineNumber": 592,
    "params": [
      {
        "name": "doc",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildOverrideMethod",
    "memberof": "src/Publisher/builder/DocBuilder.js~DocBuilder",
    "longname": "src/Publisher/builder/DocBuilder.js~DocBuilder#_buildOverrideMethod",
    "access": null,
    "description": null,
    "lineNumber": 602,
    "params": [
      {
        "name": "doc",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Publisher/builder/DocResolver.js",
    "memberof": null,
    "longname": "src/Publisher/builder/DocResolver.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import fs from 'fs';\nimport path from 'path';\nimport {markdown} from './util.js';\n\nexport default class DocResolver {\n  constructor(builder) {\n    this._builder = builder;\n    this._data = builder._data;\n  }\n\n  resolve() {\n    this._resolveAccess();\n    this._resolveOnlyExported();\n    this._resolveIgnore();\n    this._resolveMarkdown();\n    this._resolveLink();\n    this._resolveExtendsChain();\n  }\n\n  _resolveIgnore() {\n    if (this._data.__RESOLVED_IGNORE__) return;\n\n    let docs = this._builder._find({ignore: true});\n    for (let doc of docs) {\n      var regex = new RegExp(`^${doc.longname}[.~#]`);\n      this._data({longname: {regex: regex}}).remove();\n    }\n    this._data({ignore: true}).remove();\n\n    this._data.__RESOLVED_IGNORE__ = true;\n  }\n\n  _resolveAccess() {\n    if (this._data.__RESOLVED_ACCESS__) return;\n\n    let config = this._builder._config;\n    let access = config.access || ['public', 'protected', 'private'];\n\n    this._data().update(function(){\n      if (!this.access) this.access = 'public';\n      if (!access.includes(this.access)) this.ignore = true;\n      return this;\n    });\n\n    this._data.__RESOLVED_ACCESS__ = true;\n  }\n\n  _resolveOnlyExported() {\n    if (this._data.__RESOLVED_ONLY_EXPORTED__) return;\n\n    let config = this._builder._config;\n    let onlyExported = config.onlyExported;\n    if (onlyExported) {\n      this._data({export: false}).update({ignore: true});\n    }\n\n    this._data.__RESOLVED_ONLY_EXPORTED__ = true;\n  }\n\n  _resolveMarkdown() {\n    if (this._data.__RESOLVED_MARKDOWN__) return;\n\n    function convert(obj) {\n      for (let key of Object.keys(obj)) {\n        let value = obj[key];\n        if (key === 'description' && typeof value === 'string') {\n          obj[key] = markdown(value, true);\n        } else if (typeof value === 'object' && value) {\n          convert(value);\n        }\n      }\n    }\n\n    let docs = this._builder._find();\n    for (let doc of docs) {\n      convert(doc);\n    }\n\n    this._data.__RESOLVED_MARKDOWN__ = true;\n  }\n\n  _resolveLink() {\n    if(this._data.__RESOLVED_LINK__) return;\n\n    let link = (str)=>{\n      if (!str) return str;\n\n      return str.replace(/\\{@link ([\\w\\#_\\-.:\\~\\/]+)}/g, (str, longname)=>{\n        return this._builder._buildDocLinkHTML(longname, longname);\n      });\n    };\n\n    this._data().each((v)=>{\n      v.description = link(v.description);\n\n      if (v.params) {\n        for (let param of v.params) {\n          param.description = link(param.description);\n        }\n      }\n\n      if (v.return) {\n        v.return.description = link(v.return.description);\n      }\n\n      if (v.throws) {\n        for (let _throw of v.throws) {\n          _throw.description = link(_throw.description);\n        }\n      }\n\n      if (v.see) {\n        for (let i = 0; i < v.see.length; i++) {\n          if (v.see[i].indexOf('{@link') === 0) {\n            v.see[i] = link(v.see[i]);\n          } else if(v.see[i].indexOf('<a href') === 0) {\n            // ignore\n          } else {\n            v.see[i] = `<a href=\"${v.see[i]}\">${v.see[i]}</a>`;\n          }\n        }\n      }\n    });\n\n    this._data.__RESOLVED_LINK__ = true;\n  }\n\n  _resolveExtendsChain() {\n    if (this._data.__RESOLVED_EXTENDS_CHAIN__) return;\n\n    let extendsChain = (doc) => {\n      if (!doc.extends) return;\n\n      let selfDoc = doc;\n\n      // traverse super class.\n      let chains = [];\n      while (1) {\n        if (!doc.extends) break;\n\n        let superClassDoc = this._builder._findByName(doc.extends[0])[0];\n        if (superClassDoc) {\n          chains.push(superClassDoc.longname);\n          doc = superClassDoc;\n        } else {\n          chains.push(doc.extends[0]);\n          break;\n        }\n      }\n\n      if (chains.length) {\n        // direct subclass\n        let superClassDoc = this._builder._findByName(chains[0])[0];\n        if (superClassDoc) {\n          if (!superClassDoc._custom_direct_subclasses) superClassDoc._custom_direct_subclasses = [];\n          superClassDoc._custom_direct_subclasses.push(selfDoc.longname);\n        }\n\n        // indirect subclass\n        for (let superClassLongname of chains.slice(1)) {\n          superClassDoc = this._builder._findByName(superClassLongname)[0];\n          if (superClassDoc) {\n            if (!superClassDoc._custom_indirect_subclasses) superClassDoc._custom_indirect_subclasses = [];\n            superClassDoc._custom_indirect_subclasses.push(selfDoc.longname);\n          }\n        }\n\n        // indirect implements and mixes\n        for (let superClassLongname of chains) {\n          superClassDoc = this._builder._findByName(superClassLongname)[0];\n          if (!superClassDoc) continue;\n\n          // indirect implements\n          if (superClassDoc.implements) {\n            if (!selfDoc._custom_indirect_implements) selfDoc._custom_indirect_implements = [];\n            selfDoc._custom_indirect_implements.push(...superClassDoc.implements);\n          }\n\n          // indirect mixes\n          //if (superClassDoc.mixes) {\n          //  if (!selfDoc._custom_indirect_mixes) selfDoc._custom_indirect_mixes = [];\n          //  selfDoc._custom_indirect_mixes.push(...superClassDoc.mixes);\n          //}\n        }\n\n        // extends chains\n        selfDoc._custom_extends_chains = chains.reverse();\n      }\n    };\n\n    let implemented = (doc) =>{\n      let selfDoc = doc;\n\n      // direct implemented (like direct subclass)\n      for (let superClassLongname of selfDoc.implements || []) {\n        let superClassDoc = this._builder._findByName(superClassLongname)[0];\n        if (!superClassDoc) continue;\n        if(!superClassDoc._custom_direct_implemented) superClassDoc._custom_direct_implemented = [];\n        superClassDoc._custom_direct_implemented.push(selfDoc.longname);\n      }\n\n      // indirect implemented (like indirect subclass)\n      for (let superClassLongname of selfDoc._custom_indirect_implements || []) {\n        let superClassDoc = this._builder._findByName(superClassLongname)[0];\n        if (!superClassDoc) continue;\n        if(!superClassDoc._custom_indirect_implemented) superClassDoc._custom_indirect_implemented = [];\n        superClassDoc._custom_indirect_implemented.push(selfDoc.longname);\n      }\n    };\n\n    //var mixed = (doc) =>{\n    //  var selfDoc = doc;\n    //\n    //  // direct mixed (like direct subclass)\n    //  for (var superClassLongname of selfDoc.mixes || []) {\n    //    var superClassDoc = this._builder._find({longname: superClassLongname})[0];\n    //    if (!superClassDoc) continue;\n    //    if(!superClassDoc._custom_direct_mixed) superClassDoc._custom_direct_mixed = [];\n    //    superClassDoc._custom_direct_mixed.push(selfDoc.longname);\n    //  }\n    //\n    //  // indirect mixed (like indirect subclass)\n    //  for (var superClassLongname of selfDoc._custom_indirect_mixes || []) {\n    //    var superClassDoc = this._builder._find({longname: superClassLongname})[0];\n    //    if (!superClassDoc) continue;\n    //    if(!superClassDoc._custom_indirect_mixed) superClassDoc._custom_indirect_mixed = [];\n    //    superClassDoc._custom_indirect_mixed.push(selfDoc.longname);\n    //  }\n    //};\n\n    let docs = this._builder._find({kind: 'class'});\n    for (let doc of docs) {\n      extendsChain(doc);\n      implemented(doc);\n      //mixed(doc);\n    }\n\n    this._data.__RESOLVED_EXTENDS_CHAIN__ = true;\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DocResolver",
    "memberof": "src/Publisher/builder/DocResolver.js",
    "longname": "src/Publisher/builder/DocResolver.js~DocResolver",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Publisher/builder/DocResolver.js",
    "importStyle": "DocResolver",
    "description": null,
    "lineNumber": 5,
    "interface": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/Publisher/builder/DocResolver.js~DocResolver",
    "longname": "src/Publisher/builder/DocResolver.js~DocResolver#constructor",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "params": [
      {
        "name": "builder",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_builder",
    "memberof": "src/Publisher/builder/DocResolver.js~DocResolver",
    "longname": "src/Publisher/builder/DocResolver.js~DocResolver#_builder",
    "access": null,
    "description": null,
    "lineNumber": 7
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_data",
    "memberof": "src/Publisher/builder/DocResolver.js~DocResolver",
    "longname": "src/Publisher/builder/DocResolver.js~DocResolver#_data",
    "access": null,
    "description": null,
    "lineNumber": 8
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resolve",
    "memberof": "src/Publisher/builder/DocResolver.js~DocResolver",
    "longname": "src/Publisher/builder/DocResolver.js~DocResolver#resolve",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_resolveIgnore",
    "memberof": "src/Publisher/builder/DocResolver.js~DocResolver",
    "longname": "src/Publisher/builder/DocResolver.js~DocResolver#_resolveIgnore",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_resolveAccess",
    "memberof": "src/Publisher/builder/DocResolver.js~DocResolver",
    "longname": "src/Publisher/builder/DocResolver.js~DocResolver#_resolveAccess",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "params": [],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "access",
    "memberof": "src/Publisher/builder/DocResolver.js~DocResolver",
    "longname": "src/Publisher/builder/DocResolver.js~DocResolver#access",
    "access": null,
    "description": null,
    "lineNumber": 40
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "ignore",
    "memberof": "src/Publisher/builder/DocResolver.js~DocResolver",
    "longname": "src/Publisher/builder/DocResolver.js~DocResolver#ignore",
    "access": null,
    "description": null,
    "lineNumber": 41
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_resolveOnlyExported",
    "memberof": "src/Publisher/builder/DocResolver.js~DocResolver",
    "longname": "src/Publisher/builder/DocResolver.js~DocResolver#_resolveOnlyExported",
    "access": null,
    "description": null,
    "lineNumber": 48,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_resolveMarkdown",
    "memberof": "src/Publisher/builder/DocResolver.js~DocResolver",
    "longname": "src/Publisher/builder/DocResolver.js~DocResolver#_resolveMarkdown",
    "access": null,
    "description": null,
    "lineNumber": 60,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_resolveLink",
    "memberof": "src/Publisher/builder/DocResolver.js~DocResolver",
    "longname": "src/Publisher/builder/DocResolver.js~DocResolver#_resolveLink",
    "access": null,
    "description": null,
    "lineNumber": 82,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_resolveExtendsChain",
    "memberof": "src/Publisher/builder/DocResolver.js~DocResolver",
    "longname": "src/Publisher/builder/DocResolver.js~DocResolver#_resolveExtendsChain",
    "access": null,
    "description": null,
    "lineNumber": 128,
    "params": [],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Publisher/builder/FileDocBuilder.js",
    "memberof": null,
    "longname": "src/Publisher/builder/FileDocBuilder.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import IceCap from 'ice-cap';\nimport DocBuilder from './DocBuilder.js';\n\nexport default class FileDocBuilder extends DocBuilder {\n  exec(callback) {\n    let ice = this._buildLayoutDoc();\n    ice.autoClose = false;\n\n    let docs = this._find({kind: 'file'});\n    for (let doc of docs) {\n      ice.load('content', this._buildFileDoc(doc), IceCap.MODE_WRITE);\n      let fileName = this._getOutputFileName(doc);\n      callback(ice.html, fileName);\n    }\n  }\n\n  _buildFileDoc(doc) {\n    let ice = new IceCap(this._readTemplate('@file.html'));\n    ice.text('title', doc.longname);\n    ice.load('content', doc.content);\n    return ice.html;\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FileDocBuilder",
    "memberof": "src/Publisher/builder/FileDocBuilder.js",
    "longname": "src/Publisher/builder/FileDocBuilder.js~FileDocBuilder",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Publisher/builder/FileDocBuilder.js",
    "importStyle": "FileDocBuilder",
    "description": null,
    "lineNumber": 4,
    "interface": false,
    "extends": [
      "src/Publisher/builder/DocBuilder.js~DocBuilder"
    ]
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "exec",
    "memberof": "src/Publisher/builder/FileDocBuilder.js~FileDocBuilder",
    "longname": "src/Publisher/builder/FileDocBuilder.js~FileDocBuilder#exec",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildFileDoc",
    "memberof": "src/Publisher/builder/FileDocBuilder.js~FileDocBuilder",
    "longname": "src/Publisher/builder/FileDocBuilder.js~FileDocBuilder#_buildFileDoc",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "params": [
      {
        "name": "doc",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Publisher/builder/IndexDocBuilder.js",
    "memberof": null,
    "longname": "src/Publisher/builder/IndexDocBuilder.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import fs from 'fs';\nimport IceCap from 'ice-cap';\nimport DocBuilder from './DocBuilder.js';\n\nexport default class IndexDocBuilder extends DocBuilder {\n  exec(callback) {\n    let ice = this._buildLayoutDoc();\n    ice.load('content', this._buildIndexDoc());\n    callback(ice.html, '@index.html');\n  }\n\n  _buildIndexDoc() {\n    let indexInfo = this._getInfo();\n\n    let ice = new IceCap(this._readTemplate('@index.html'));\n\n    ice.text('title', indexInfo.title);\n    ice.text('version', indexInfo.version, 'append');\n    ice.text('url', indexInfo.url);\n    ice.attr('url', 'href', indexInfo.url);\n    ice.text('description', indexInfo.desc);\n\n    ice.load('classSummary', this._buildSummaryHTML(null, 'class', 'Class Summary'), 'append');\n    ice.load('interfaceSummary', this._buildSummaryHTML(null, 'interface', 'Interface Summary'), 'append');\n    ice.load('functionSummary', this._buildSummaryHTML(null, 'function', 'Function Summary'), 'append');\n    ice.load('variableSummary', this._buildSummaryHTML(null, 'variable', 'Variable Summary'), 'append');\n    ice.load('typedefSummary', this._buildSummaryHTML(null, 'typedef', 'Typedef Summary'), 'append');\n    ice.load('fileSummary', this._buildSummaryHTML(null, 'file', 'File Summary'), 'append');\n\n    return ice;\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "IndexDocBuilder",
    "memberof": "src/Publisher/builder/IndexDocBuilder.js",
    "longname": "src/Publisher/builder/IndexDocBuilder.js~IndexDocBuilder",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Publisher/builder/IndexDocBuilder.js",
    "importStyle": "IndexDocBuilder",
    "description": null,
    "lineNumber": 5,
    "interface": false,
    "extends": [
      "src/Publisher/builder/DocBuilder.js~DocBuilder"
    ]
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "exec",
    "memberof": "src/Publisher/builder/IndexDocBuilder.js~IndexDocBuilder",
    "longname": "src/Publisher/builder/IndexDocBuilder.js~IndexDocBuilder#exec",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildIndexDoc",
    "memberof": "src/Publisher/builder/IndexDocBuilder.js~IndexDocBuilder",
    "longname": "src/Publisher/builder/IndexDocBuilder.js~IndexDocBuilder#_buildIndexDoc",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Publisher/builder/ReadmeDocBuilder.js",
    "memberof": null,
    "longname": "src/Publisher/builder/ReadmeDocBuilder.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import fs from 'fs';\nimport IceCap from 'ice-cap';\nimport DocBuilder from './DocBuilder.js';\nimport {markdown} from './util.js';\n\nexport default class ReadmeDocBuilder extends DocBuilder {\n  exec(callback) {\n    let ice = this._buildLayoutDoc();\n    ice.load('content', this._buildReadmeDoc());\n    callback(ice.html, 'index.html');\n  }\n\n  _buildReadmeDoc() {\n    if (!this._config.readme) return 'NO README';\n\n    let readme = fs.readFileSync(this._config.readme, {encode: 'utf8'}).toString();\n\n    let html = this._readTemplate('@readme.html');\n    let ice = new IceCap(html);\n    ice.load('readme', markdown(readme));\n\n    return ice;\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ReadmeDocBuilder",
    "memberof": "src/Publisher/builder/ReadmeDocBuilder.js",
    "longname": "src/Publisher/builder/ReadmeDocBuilder.js~ReadmeDocBuilder",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Publisher/builder/ReadmeDocBuilder.js",
    "importStyle": "ReadmeDocBuilder",
    "description": null,
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/Publisher/builder/DocBuilder.js~DocBuilder"
    ]
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "exec",
    "memberof": "src/Publisher/builder/ReadmeDocBuilder.js~ReadmeDocBuilder",
    "longname": "src/Publisher/builder/ReadmeDocBuilder.js~ReadmeDocBuilder#exec",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildReadmeDoc",
    "memberof": "src/Publisher/builder/ReadmeDocBuilder.js~ReadmeDocBuilder",
    "longname": "src/Publisher/builder/ReadmeDocBuilder.js~ReadmeDocBuilder#_buildReadmeDoc",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Publisher/builder/SearchIndexBuilder.js",
    "memberof": null,
    "longname": "src/Publisher/builder/SearchIndexBuilder.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import path from 'path';\nimport DocBuilder from './DocBuilder.js';\n\nexport default class SearchIndexBuilder extends DocBuilder {\n  exec(callback) {\n    let searchIndex = [];\n    let docs = this._find({});\n\n    for (let doc of docs) {\n      let indexText, url, displayText;\n\n      if (doc.importPath) {\n        displayText = `<span>${doc.name}</span> <span class=\"search-result-import-path\">${doc.importPath}</span>`;\n        indexText = `${doc.importPath}~${doc.name}`.toLowerCase();\n        url = this._getURL(doc, null, 2);\n      } else {\n        displayText = doc.longname;\n        indexText = displayText.toLowerCase();\n        url = this._getURL(doc, null, 2);\n      }\n\n      searchIndex.push([indexText, url, displayText]);\n    }\n\n    searchIndex.sort((a, b)=>{\n      if (a[2] === b[2]) {\n        return 0;\n      } else if (a[2] < b[2]) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n\n    let javascript = 'window.jsdocCloudySearchIndex = ' + JSON.stringify(searchIndex, null, 2);\n\n    callback(javascript, 'script/search_index.js');\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SearchIndexBuilder",
    "memberof": "src/Publisher/builder/SearchIndexBuilder.js",
    "longname": "src/Publisher/builder/SearchIndexBuilder.js~SearchIndexBuilder",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Publisher/builder/SearchIndexBuilder.js",
    "importStyle": "SearchIndexBuilder",
    "description": null,
    "lineNumber": 4,
    "interface": false,
    "extends": [
      "src/Publisher/builder/DocBuilder.js~DocBuilder"
    ]
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "exec",
    "memberof": "src/Publisher/builder/SearchIndexBuilder.js~SearchIndexBuilder",
    "longname": "src/Publisher/builder/SearchIndexBuilder.js~SearchIndexBuilder#exec",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Publisher/builder/SingleDocBuilder.js",
    "memberof": null,
    "longname": "src/Publisher/builder/SingleDocBuilder.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import IceCap from 'ice-cap';\nimport DocBuilder from './DocBuilder.js';\n\nexport default class SingleDocBuilder extends DocBuilder {\n  exec(callback) {\n    let ice = this._buildLayoutDoc();\n    ice.autoClose = false;\n\n    let kinds = ['function', 'variable', 'typedef'];\n    for (let kind of kinds) {\n      let docs = this._find({kind: kind});\n      if (!docs.length) return;\n      ice.load('content', this._buildSingleDoc(kind), IceCap.MODE_WRITE);\n      let fileName = this._getOutputFileName(docs[0]);\n      callback(ice.html, fileName);\n    }\n  }\n\n  _buildSingleDoc(kind) {\n    let title = kind.replace(/^(\\w)/, (c)=> c.toUpperCase() );\n    let ice = new IceCap(this._readTemplate('@single.html'));\n    ice.text('title', title);\n    ice.load('summaries', this._buildSummaryHTML(null, kind, 'Summary'), 'append');\n    ice.load('details', this._buildDetailHTML(null, kind, ''));\n    return ice.html;\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SingleDocBuilder",
    "memberof": "src/Publisher/builder/SingleDocBuilder.js",
    "longname": "src/Publisher/builder/SingleDocBuilder.js~SingleDocBuilder",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Publisher/builder/SingleDocBuilder.js",
    "importStyle": "SingleDocBuilder",
    "description": null,
    "lineNumber": 4,
    "interface": false,
    "extends": [
      "src/Publisher/builder/DocBuilder.js~DocBuilder"
    ]
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "exec",
    "memberof": "src/Publisher/builder/SingleDocBuilder.js~SingleDocBuilder",
    "longname": "src/Publisher/builder/SingleDocBuilder.js~SingleDocBuilder#exec",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildSingleDoc",
    "memberof": "src/Publisher/builder/SingleDocBuilder.js~SingleDocBuilder",
    "longname": "src/Publisher/builder/SingleDocBuilder.js~SingleDocBuilder#_buildSingleDoc",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "params": [
      {
        "name": "kind",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Publisher/builder/StaticFileBuilder.js",
    "memberof": null,
    "longname": "src/Publisher/builder/StaticFileBuilder.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import path from 'path';\nimport DocBuilder from './DocBuilder.js';\n\nexport default class StaticFileBuilder extends DocBuilder {\n  exec(callback) {\n    callback(path.resolve(__dirname, './template/css'), './css');\n    callback(path.resolve(__dirname, './template/script'), './script');\n    callback(path.resolve(__dirname, './template/image'), './image');\n\n    // see DocBuilder#_buildLayoutDoc\n    let scripts = this._config.scripts || [];\n    for (let i = 0; i < scripts.length; i++) {\n      let userScript = scripts[i];\n      let name = `./user/script/${i}-${path.basename(userScript)}`;\n      callback(userScript, name);\n    }\n\n    let styles = this._config.styles || [];\n    for (let i = 0; i < styles.length; i++) {\n      let userStyle = styles[i];\n      let name = `./user/css/${i}-${path.basename(userStyle)}`;\n      callback(userStyle, name);\n    }\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "StaticFileBuilder",
    "memberof": "src/Publisher/builder/StaticFileBuilder.js",
    "longname": "src/Publisher/builder/StaticFileBuilder.js~StaticFileBuilder",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Publisher/builder/StaticFileBuilder.js",
    "importStyle": "StaticFileBuilder",
    "description": null,
    "lineNumber": 4,
    "interface": false,
    "extends": [
      "src/Publisher/builder/DocBuilder.js~DocBuilder"
    ]
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "exec",
    "memberof": "src/Publisher/builder/StaticFileBuilder.js~StaticFileBuilder",
    "longname": "src/Publisher/builder/StaticFileBuilder.js~StaticFileBuilder#exec",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Publisher/builder/util.js",
    "memberof": null,
    "longname": "src/Publisher/builder/util.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import marked from 'marked';\n\nexport function shorten(doc) {\n  if (!doc) return '';\n\n  if (doc.summary) return doc.summary;\n\n  let desc = doc.description;\n  if (!desc) return '';\n\n  let len = desc.length;\n  let inSQuote = false;\n  let inWQuote = false;\n  let inCode = false;\n  for (let i = 0; i < desc.length; i++) {\n    let char1 = desc.charAt(i);\n    let char2 = desc.charAt(i + 1);\n    let char4 = desc.substr(i, 6);\n    let char5 = desc.substr(i, 7);\n    if (char1 === \"'\") inSQuote = !inSQuote;\n    else if (char1 === '\"') inWQuote = !inWQuote;\n    else if (char4 === '<code>') inCode = true;\n    else if (char5 === '</code>') inCode = false;\n\n    if (inSQuote || inCode || inWQuote) continue;\n\n    if (char1 === '.') {\n      if (char2 === ' ' || char2 === '\\n' || char2 === '<') {\n        len = i + 1;\n        break;\n      }\n    } else if (char1 === '\\n') {\n      len = i + 1;\n      break;\n    }\n  }\n\n  return desc.substr(0, len);\n}\n\nexport function markdown(text, breaks = false) {\n  let compiled = marked(text, {\n    gfm: true,\n    tables: true,\n    breaks: breaks,\n    highlight: function (code) {\n      return `<pre class=\"source-code\"><code class=\"prettyprint\">${code}</code></pre>`;\n    }\n  });\n\n  return compiled;\n}\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Publisher/publish.js",
    "memberof": null,
    "longname": "src/Publisher/publish.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import fs from 'fs-extra';\nimport path from 'path';\nimport {taffy} from 'taffydb';\nimport StaticFileBuilder from './builder/StaticFileBuilder.js';\nimport IndexDocBuilder from './builder/IndexDocBuilder.js';\nimport ReadmeDocBuilder from './builder/ReadmeDocBuilder.js';\nimport ClassDocBuilder from './builder/ClassDocBuilder.js';\nimport SingleDocBuilder from './builder/SingleDocBuilder.js';\nimport FileDocBuilder from './builder/FileDocBuilder.js';\nimport SearchIndexBuilder from './builder/SearchIndexBuilder.js';\n\nexport default function publish(values, config) {\n  let dumpPath = path.resolve(config.destination, 'dump.json');\n  fs.outputFileSync(dumpPath, JSON.stringify(values, null, 2));\n\n  let data = taffy(values);\n\n  function writeHTML(html, fileName) {\n    console.log(fileName);\n    var filePath = path.resolve(config.destination, fileName);\n    fs.outputFileSync(filePath, html, {encoding: 'utf8'});\n  }\n\n  function copy(srcPath, destPath) {\n    console.log(destPath);\n    fs.copySync(srcPath, path.resolve(config.destination, destPath));\n  }\n\n  new IndexDocBuilder(data, config).exec(writeHTML);\n  new ReadmeDocBuilder(data, config).exec(writeHTML);\n  new ClassDocBuilder(data, config).exec(writeHTML);\n  new SingleDocBuilder(data, config).exec(writeHTML);\n  new FileDocBuilder(data, config).exec(writeHTML);\n  new StaticFileBuilder(data, config).exec(copy);\n  new SearchIndexBuilder(data, config).exec(writeHTML);\n};\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Typedef/typedef.js",
    "memberof": null,
    "longname": "src/Typedef/typedef.js",
    "access": null,
    "description": null,
    "lineNumber": 51,
    "content": "/**\n * ESDoc config object.\n * @typedef {Object} ESDocConfig\n * @property {!string} source - directory path of javascript source code.\n * @property {!string} destination - directory path of output.\n * @property {string[]} [includes=[\"\\\\.js$\"]]\n * @property {string[]} [excludes=[\"\\\\.config.\\\\.js$\"]]\n * @property {string[]} [access=[\"public\", \"protected\"]]\n * @property {boolean} [onlyExported=true]\n * @property {boolean} [debug=false]\n * @property {string} [readme=\"./README.md\"]\n * @property {string} [package=\"./package.json\"]\n * @property {string} [importPathPrefix=\"\"]\n * @property {string[]} [styles=[]]\n * @property {string[]} [scripts=[]]\n * @see https://esdoc.org/config.html\n */\n\n/**\n * Parsed doc comment.\n * @typedef {Object} DocObject\n */\n\n/**\n * @typedef {Object} DocTypedef\n */\n\n/**\n * @typedef {Object} PackageTypedef\n * @property {Object} repository\n * @property {string} repository.url\n */\n\n/**\n * @todo remove this typedef.\n * @typedef {Object} IceCapInstanceTypedef\n * @property {function} loop\n * @property {function} attr\n * @property {function} text\n * @property {function} load\n * @property {function} into\n * @property {function} drop\n * @property {string} html\n */\n\n/**\n * @todo remove this typedef.\n * @typedef {Object} TaffyCursor\n * @property {function} each\n */\n"
  },
  {
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "ESDocConfig",
    "memberof": "src/Typedef/typedef.js",
    "longname": "src/Typedef/typedef.js~ESDocConfig",
    "access": null,
    "description": "ESDoc config object.",
    "see": [
      "https://esdoc.org/config.html"
    ],
    "properties": [
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": "directory path of javascript source code."
      },
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "destination",
        "description": "directory path of output."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[\"\\\\.js$\"]",
        "defaultRaw": [
          "\\.js$"
        ],
        "name": "includes",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[\"\\\\.config.\\\\.js$\"]",
        "defaultRaw": [
          "\\.config.\\.js$"
        ],
        "name": "excludes",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[\"public\",",
        "defaultRaw": "[\"public\",",
        "name": "access",
        "description": "\"protected\"]]"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "onlyExported",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "debug",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"./README.md\"",
        "defaultRaw": "./README.md",
        "name": "readme",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"./package.json\"",
        "defaultRaw": "./package.json",
        "name": "package",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"\"",
        "defaultRaw": "",
        "name": "importPathPrefix",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "styles",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "scripts",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ESDocConfig"
    }
  },
  {
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "DocObject",
    "memberof": "src/Typedef/typedef.js",
    "longname": "src/Typedef/typedef.js~DocObject",
    "access": null,
    "description": "Parsed doc comment.",
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "DocObject"
    }
  },
  {
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "DocTypedef",
    "memberof": "src/Typedef/typedef.js",
    "longname": "src/Typedef/typedef.js~DocTypedef",
    "access": null,
    "description": null,
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "DocTypedef"
    }
  },
  {
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "PackageTypedef",
    "memberof": "src/Typedef/typedef.js",
    "longname": "src/Typedef/typedef.js~PackageTypedef",
    "access": null,
    "description": null,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "repository",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "repository.url",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "PackageTypedef"
    }
  },
  {
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "IceCapInstanceTypedef",
    "memberof": "src/Typedef/typedef.js",
    "longname": "src/Typedef/typedef.js~IceCapInstanceTypedef",
    "access": null,
    "description": null,
    "todo": [
      "remove this typedef."
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "loop",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "attr",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "load",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "into",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "drop",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "html",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "IceCapInstanceTypedef"
    }
  },
  {
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "TaffyCursor",
    "memberof": "src/Typedef/typedef.js",
    "longname": "src/Typedef/typedef.js~TaffyCursor",
    "access": null,
    "description": null,
    "todo": [
      "remove this typedef."
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "each",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "TaffyCursor"
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Util/ASTUtil.js",
    "memberof": null,
    "longname": "src/Util/ASTUtil.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import estraverse from 'estraverse';\n\nlet ESTRAVERSE_KEYS = {\n  Super: []\n};\n\nexport default class ASTUtil {\n  static traverse(ast, callback) {\n    estraverse.traverse(ast, {\n      enter: function(node, parent) {\n        callback.call(this, node, parent);\n      },\n\n      keys: ESTRAVERSE_KEYS\n    });\n  }\n\n  static findPathInImportDeclaration(ast, name) {\n    let path = null;\n\n    estraverse.traverse(ast, {\n      enter: function(node, parent) {\n        if (node.type !== 'ImportDeclaration') return;\n\n        for (let spec of node.specifiers) {\n          let localName = spec.local.name;\n          if (localName === name) {\n            path = node.source.value;\n            this.break();\n          }\n        }\n      },\n\n      keys: ESTRAVERSE_KEYS\n    });\n\n    return path;\n  }\n}\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ESTRAVERSE_KEYS",
    "memberof": "src/Util/ASTUtil.js",
    "longname": "src/Util/ASTUtil.js~ESTRAVERSE_KEYS",
    "access": null,
    "export": false,
    "importPath": "esdoc/out/src/Util/ASTUtil.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ASTUtil",
    "memberof": "src/Util/ASTUtil.js",
    "longname": "src/Util/ASTUtil.js~ASTUtil",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Util/ASTUtil.js",
    "importStyle": "ASTUtil",
    "description": null,
    "lineNumber": 7,
    "interface": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "traverse",
    "memberof": "src/Util/ASTUtil.js~ASTUtil",
    "longname": "src/Util/ASTUtil.js~ASTUtil.traverse",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "params": [
      {
        "name": "ast",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "findPathInImportDeclaration",
    "memberof": "src/Util/ASTUtil.js~ASTUtil",
    "longname": "src/Util/ASTUtil.js~ASTUtil.findPathInImportDeclaration",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "params": [
      {
        "name": "ast",
        "types": [
          "*"
        ]
      },
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Util/PathResolver.js",
    "memberof": null,
    "longname": "src/Util/PathResolver.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import path from 'path';\nimport assert from 'assert';\n\nexport default class PathResolver {\n  constructor(inDirPath, filePath, packageName = null, mainFilePath = null, pathPrefix = '') {\n    assert(inDirPath);\n    assert(filePath);\n\n    this._inDirPath = path.resolve(inDirPath);\n    this._filePath = path.resolve(filePath);\n    this._packageName = packageName;\n    if (mainFilePath) {\n      this._mainFilePath = path.resolve(mainFilePath);\n    }\n    this._pathPrefix = pathPrefix || '';\n\n    if (this._pathPrefix) {\n      this._prefixedFilePath = path.resolve(`${this._pathPrefix}${path.sep}${this.filePath}`);\n    } else {\n      this._prefixedFilePath = path.resolve(this.filePath);\n    }\n  }\n\n  get importPath() {\n    if (this._mainFilePath === this._prefixedFilePath) {\n      return this._packageName;\n    }\n\n    let relativeFilePath = this.filePath;\n    if (this._packageName) {\n      return path.normalize(`${this._packageName}${path.sep}${this._pathPrefix}${path.sep}${relativeFilePath}`);\n    } else {\n      return `./${relativeFilePath}`;\n    }\n  }\n\n  get fileFullPath() {\n    return this._filePath;\n  }\n\n  get filePath() {\n    let relativeFilePath = path.relative(path.dirname(this._inDirPath), this._filePath);\n    return relativeFilePath;\n  }\n\n  resolve(relativePath) {\n    let selfDirPath = path.dirname(this._filePath);\n    let resolvedPath = path.resolve(selfDirPath, relativePath);\n    let resolvedRelativePath = path.relative(path.dirname(this._inDirPath), resolvedPath);\n    return resolvedRelativePath;\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PathResolver",
    "memberof": "src/Util/PathResolver.js",
    "longname": "src/Util/PathResolver.js~PathResolver",
    "access": null,
    "export": true,
    "importPath": "esdoc/out/src/Util/PathResolver.js",
    "importStyle": "PathResolver",
    "description": null,
    "lineNumber": 4,
    "interface": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "longname": "src/Util/PathResolver.js~PathResolver#constructor",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "params": [
      {
        "name": "inDirPath",
        "types": [
          "*"
        ]
      },
      {
        "name": "filePath",
        "types": [
          "*"
        ]
      },
      {
        "name": "packageName",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": null,
        "defaultValue": "null"
      },
      {
        "name": "mainFilePath",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": null,
        "defaultValue": "null"
      },
      {
        "name": "pathPrefix",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "",
        "defaultValue": ""
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_inDirPath",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "longname": "src/Util/PathResolver.js~PathResolver#_inDirPath",
    "access": null,
    "description": null,
    "lineNumber": 9
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_filePath",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "longname": "src/Util/PathResolver.js~PathResolver#_filePath",
    "access": null,
    "description": null,
    "lineNumber": 10
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_packageName",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "longname": "src/Util/PathResolver.js~PathResolver#_packageName",
    "access": null,
    "description": null,
    "lineNumber": 11
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_mainFilePath",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "longname": "src/Util/PathResolver.js~PathResolver#_mainFilePath",
    "access": null,
    "description": null,
    "lineNumber": 13
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_pathPrefix",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "longname": "src/Util/PathResolver.js~PathResolver#_pathPrefix",
    "access": null,
    "description": null,
    "lineNumber": 15
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_prefixedFilePath",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "longname": "src/Util/PathResolver.js~PathResolver#_prefixedFilePath",
    "access": null,
    "description": null,
    "lineNumber": 18
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_prefixedFilePath",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "longname": "src/Util/PathResolver.js~PathResolver#_prefixedFilePath",
    "access": null,
    "description": null,
    "lineNumber": 20
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "importPath",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "longname": "src/Util/PathResolver.js~PathResolver#importPath",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fileFullPath",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "longname": "src/Util/PathResolver.js~PathResolver#fileFullPath",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "filePath",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "longname": "src/Util/PathResolver.js~PathResolver#filePath",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resolve",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "longname": "src/Util/PathResolver.js~PathResolver#resolve",
    "access": null,
    "description": null,
    "lineNumber": 46,
    "params": [
      {
        "name": "relativePath",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  }
]